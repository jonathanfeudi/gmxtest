<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000002</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

clouds = 0;

backswitch = 0;

back = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Intro Stage Back Drop

alarm[0] = room_speed * .1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Intro Stage Stars

alarm[0] = room_speed * .1;

if backswitch &lt; 3
{
    backswitch += 1;
}
if backswitch = 3
{
    backswitch = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clouds

clouds += .35; //05


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// TEST

/***************************************************
  This piece of code draw the background with
  different illusion of depth, by using position
  relative to the current view's position.
  The larger the division number the faster
  the background will move.
 ***************************************************/
if room = room_1
or room = room_2
or room = room_3
or room = room_4
or room = room_5
{
    draw_background(background0,view_xview[view_current],view_yview[view_current]) // Draw furthest static background
    draw_background_tiled_horizontal(background5,view_xview[view_current]/1.1+200,view_yview[view_current]/1.1+300) // Draw background that move slowest
    draw_background(background6,view_xview[view_current]/1.1+300,view_yview[view_current]/1.1+332)// Draw single big building
    draw_background_tiled_horizontal(background1,view_xview[view_current]/1.25+200,view_yview[view_current]/1.25+340) // Draw background that move slowest
    draw_background_tiled_horizontal(background2,view_xview[view_current]/1.5,view_yview[view_current]/1.5+386) // Draw background that move slower
    draw_background_tiled_horizontal(background4,0,720) // Draw the ground
}

/*
draw_background(background0,view_xview[view_current],view_yview[view_current]) // Draw furthest static background
draw_background_tiled_horizontal(background5,view_xview[view_current]/1.1+100,view_yview[view_current]/1.1+300) // Draw background that move slowest
draw_background(background6,view_xview[view_current]/1.1+300,view_yview[view_current]/1.1+232)// Draw single big building
draw_background_tiled_horizontal(background1,view_xview[view_current]/1.25+100,view_yview[view_current]/1.25+340) // Draw background that move slowest
draw_background_tiled_horizontal(background2,view_xview[view_current]/1.5,view_yview[view_current]/1.5+386) // Draw background that move slower
draw_background_tiled_horizontal(background4,0,720) // Draw the ground
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Intro Stage and Tutorials



if backswitch = 0
{
    back = bck_IntroStage_0;
}
if backswitch = 1
{
    back = bck_IntroStage_01;
}
if backswitch = 2
{
    back = bck_IntroStage_02;
}


if room = room_IntroStage_1 //or room = room_Tutorial_1
{
    draw_background_tiled_horizontal(back,view_xview[view_current]-5,view_yview[view_current]-55) // Draw furthest static background 
    //draw_background(background6,view_xview[view_current]/1.1+300,view_yview[view_current]/1.1+332)// Draw single big building
    
}

if room = room_IntroStage_2
or room = room_IntroStage_00
or room = room_IntroStage_3
or room = room_Tutorial_1
or room = room_Tutorial_2
{
    
    draw_background_tiled_horizontal(bck_IntroStage_03,view_xview[view_current]-5,view_yview[view_current]-55) // Draw furthest static background 
    //draw_background(background6,view_xview[view_current]/1.1+300,view_yview[view_current]/1.1+332)// Draw single big building
    draw_background_tiled_horizontal(bck_BLACKback,view_xview[view_current]-5,view_yview[view_current]+400) // BLACK
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
