<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_HitBOX</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cut Scene Center

center = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Testing Moved Camera not center

hover = 32;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Alpha

alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Intro Room NO BARS

intro_room = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move Towards Oenn

if speed &gt; 5 
{
    speed = 5;
}
//if global.cut_scene = 0
{
    if instance_exists(obj_Oenn_Body)
    {
        if obj_Oenn_Body.pitfall = 1
        or obj_Oenn_Body.state = states.enter
        or obj_Oenn_Body.state = states.nograv
        {
            x = obj_Oenn_Body.x;
            y = obj_Oenn_Body.y - hover;
        }
        
        if instance_exists(obj_Oenn_Body)
        {
            if speed &lt; 5
                {
                    speed += 1 //.2
                }
            
            if distance_to_object(obj_Oenn_Body) &gt; 33
            //if x != obj_Oenn_Body.x and y != obj_Oenn_Body.y
            {
                
                if obj_Oenn_Body.state != states.walking
                and obj_Oenn_Body.state != states.idle
                and obj_Oenn_Body.state != states.shooting_idle
                and obj_Oenn_Body.state != states.slashing_idle
                and obj_Oenn_Body.state != states.shooting_walking
                and obj_Oenn_Body.state != states.slashing_walking
                and obj_Oenn_Body.state != states.slashing_combo
                and obj_Oenn_Body.state != states.pushing
                and obj_Oenn_Body.state != states.pulling
                and obj_Oenn_Body.state != states.stopping
                and obj_Oenn_Body.state != states.fallingstop
                {
                    move_towards_point(obj_Oenn_Body.x,obj_Oenn_Body.y - hover,speed);
                }
                
                if obj_Oenn_Body.state = states.idle
                or obj_Oenn_Body.state = states.shooting_idle
                or obj_Oenn_Body.state = states.slashing_idle
                or obj_Oenn_Body.state = states.slashing_combo
                or obj_Oenn_Body.state = states.blocking
                or obj_Oenn_Body.state = states.charging
                or obj_Oenn_Body.state = states.charging2
                
                {
                    move_towards_point(obj_Oenn_Body.x,obj_Oenn_Body.y - hover,2);
                }
                
                if obj_Oenn_Body.state = states.walking
                or obj_Oenn_Body.state = states.shooting_walking
                or obj_Oenn_Body.state = states.slashing_walking
                {
                    move_towards_point(obj_Oenn_Body.x,obj_Oenn_Body.y - hover,3);
                }
                
                if obj_Oenn_Body.state = states.pushing
                or obj_Oenn_Body.state = states.pulling
                or obj_Oenn_Body.state = states.stopping
                or obj_Oenn_Body.state = states.fallingstop
                {
                    move_towards_point(obj_Oenn_Body.x,obj_Oenn_Body.y - hover,1);
                }
                
            }
            else
        {
            speed = 0;
        }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Camera  Shake and Center

//if global.cut_scene = 0
{
    view_xview = (x-view_wview/2);
    view_yview = (x-view_hview/2);
    
    view_xview[0] = (view_xview[0]);
    view_yview[0] = (view_yview[0]);
    
    // Camera Shake
    
    if(global.shake &gt; 0)
    {
        global.shake -= 1;
    }
     
    if(global.shake &lt; 0)
    {
        global.shake = 0;
    }
     
    view_xview = x-view_wview/2 + random(global.shake - (global.shake/2));
    view_yview = y-view_hview/2 + random(global.shake - (global.shake/2));
    view_angle = (random(global.shake - (global.shake/2)))/4;

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cut Scenes and Centering


// Orro Fight

if (room = room_IntroStage_2 ) and global.cut_scene = 1
{
    move_towards_point(obj_Camera_Point.x,obj_Camera_Point.y,4);
}



// Affliction

if room = room_Affliction_1 and global.cut_scene = 1
and !instance_exists(obj_Hol) and instance_exists(obj_Camera_Point)
{
    if distance_to_object(obj_Camera_Point) &gt; 3
    {    
        move_towards_point(obj_Camera_Point.x,obj_Camera_Point.y,2);
    }
    if distance_to_object(obj_Camera_Point) &lt; .25
    {
        speed = 0;
    }
    
}

// Follow Target Point

if global.cut_scene = 1 //and obj_Camera_Point.target != 0
//and room != room_Affliction_1
{
    if instance_exists(obj_Camera_Point) 
    {
        if distance_to_object(obj_Camera_Point) &lt;= 3
        {
            move_towards_point(obj_Camera_Point.x,obj_Camera_Point.y,3);
        }
        if distance_to_object(obj_Camera_Point) &lt; .25
        {
            speed = 0;
        }
        if distance_to_object(obj_Camera_Point) &gt; 3 //and speed != 3
        {
            move_towards_point(obj_Camera_Point.x,obj_Camera_Point.y,6);
        }
        
    if center = 1
    {
        x = obj_Camera_Point.x;
        y = obj_Camera_Point.y;
    }
         
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Absolute X and Y
/*
x = round(x);

y = round(y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cut Scenes and Alpha

if instance_exists(obj_Camera_Point)
{
    global.cut_scene = 1;
}
else
{
    global.cut_scene = 0;
}

/// Alpha

if global.cut_scene = 1
and alpha &lt; 1
and intro_room = 0
{
    alpha += .025;
}

if global.cut_scene = 0
and alpha &gt; 0
{
    alpha -= .025;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Intro Room Bars Reset cause other rooms

if room != room_IntroStage_00
{
    intro_room = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cut Scene Black Bars and Text Counter
/*
if global.cut_scene = 1
{
    draw_set_color(c_black);
    
    //draw_rectangle(view_xview,view_xview-12,view_xview+display_get_width(),view_yview-12,0);
    //draw_rectangle(x,y,x+40,y+40,0);
}*/

draw_sprite_ext(spr_Black,0,view_xview,view_yview,50,2,0,c_white,alpha);
draw_sprite_ext(spr_Black,0,view_xview,view_yview+view_hview-16,50,2,0,c_white,alpha);

//draw_text(x,y-64,global.textnextcounter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
