<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Sent_Pillar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_Platform</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

image_speed = 1/2;
//event_inherited();
up = 0;

//Moving

dir = 1
movespeed = -.25;
vsp = -1;

soundonce = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Solid Wall

wall = instance_create(x,y,obj_Raised_Platform_Wall);

wall.host = id;

with wall
{
    host = id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Dust

//instance_create(choose( x-(random_range(1,63)) , x+(random_range(1,63))),choose( y-(random_range(1,63)) , y+(random_range(1,63))),obj_Dust)

scr_RandomCreateCloud(55,112,obj_Dust)

scr_RandomCreateCloud(55,112,obj_Dust)

alarm[0] = room_speed *.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move Up and Stops and Carry Oenn

if up &gt; 0
{
    up -= .5;
    sprite_index = spr_Sent_Pillar_Shake;
    //vsp = -.5;
}
else
{
    sprite_index = spr_Sent_Pillar;
} 

if up &gt; 0 and !audio_is_playing(snd_StoneDoor_Opening)
{
    audio_play_sound(snd_StoneDoor_Opening,10,1);
    //audio_play_sound(snd_StoneDoor_Opening,10,1);
}

/*
if up = 59
{
    audio_play_sound(snd_StoneDoor_Opening,10,1);
}*/

if up &lt;= 0
{
    audio_stop_sound(snd_StoneDoor_Opening);
    alarm[0] = -4
}

//Carry Oenn

if up &gt; 0
{
    vsp = dir * (movespeed/global.slowmo);
}
else
{
    vsp = 0;
}



if up &lt;= 0 and soundonce = 1
{
    soundonce = 0
    audio_play_sound(snd_Crystal_Detonate_Explosion,10,0);
}




//Vertical Collision
/*
if place_meeting(x,y+vsp,par_wall)
{
    while (!place_meeting(x,y+sign(vsp),par_wall))
    {
        y += sign(vsp);
    }
    vsp = 0;
    dir *= -1;
}

//Vertical Collision with Ghost Block
if place_meeting(x,y+vsp,obj_Platform_Ghost_Block)
{
    while (!place_meeting(x,y+sign(vsp),obj_Platform_Ghost_Block))
    {
        y += sign(vsp);
    }
    vsp = 0;
    dir *= -1;
}*/

y += vsp;

// Carry

if (instance_exists(obj_Oenn_Body))
{
    if obj_Oenn_Body.bbox_bottom - 4 &lt; bbox_top
    and (obj_Oenn_Body.state != states.jumping)
    //and (obj_Oenn_Body.state != states.falling)
    //and (obj_Oenn_Body.state != states.shooting_jumping)
    //and (obj_Oenn_Body.state != states.slashing_jumping)
    {
        if vsp &gt; 0 and place_meeting(x,y-vsp-4,obj_Oenn_Body) 
        and obj_Oenn_Body.grounded = 0
        {
            obj_Oenn_Body.y += vsp;
           
        }
        if vsp &lt; 0 and place_meeting(x,y-4,obj_Oenn_Body) 
        and obj_Oenn_Body.grounded = 0
        {
            obj_Oenn_Body.y += vsp;   
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Bounding Box
/*
draw_set_colour(c_blue);
draw_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_top,false);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Self

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
