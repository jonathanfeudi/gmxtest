<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HUD CREATE

on = 1;

off = 0;

image_speed = .20;

//Glean

alarm[0] = room_speed*5;
//glean = 0;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stam Charge Shine

if global.cut_scene = 0
{
    instance_create(view_xview[0]+52,view_yview[0]+72,obj_Crystal_Shine);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move to Next Room

obj_Oenn_Body.x = obj_Oenn_Body.doorx;
obj_Oenn_Body.y = obj_Oenn_Body.doory;

obj_Oenn_Body.lock = false;

obj_Oenn_Body.cbd = 0;  

obj_Oenn_Body.doorgoleft = 0;
obj_Oenn_Body.doorgoright = 0;  

// Bring Camera Along
    
obj_Camera.x = obj_Oenn_Body.doorx;
obj_Camera.y = obj_Oenn_Body.doory;

obj_Oenn_Body.state = states.enterroom;

if !instance_exists(obj_room_fade_in)
{
    instance_create(x,y,obj_room_fade_in);
}

/// Legs have alarm to Change to Idle 

obj_Oenn_Legs.alarm[2] = room_speed * .75; //
obj_Oenn_Body.alarm[1] = room_speed * .75; // can be damaged
    
room_goto(obj_Oenn_Body.roomto);



//////////////////////////////////////////////// Clear Particles and Emitters

// Particle System Front
part_system_clear(global.particle_system_front);

part_emitter_destroy_all(global.particle_system_front);

part_system_depth(global.particle_system,-100000000);


// Particle System Mid
part_system_clear(global.particle_system);

part_emitter_destroy_all(global.particle_system);

part_system_depth(global.particle_system,-900);


// Particle System Below
part_system_clear(global.particle_system_back);

part_emitter_destroy_all(global.particle_system_back);

part_system_depth(global.particle_system_back,900);

// Particle System Background
part_system_clear(global.particle_system_background);

part_emitter_destroy_all(global.particle_system_background);

part_system_depth(global.particle_system_background,1000200);

// Particle System Background 10000001
part_system_clear(global.particle_system_background_10000001);

part_emitter_destroy_all(global.particle_system_background_10000001);

part_system_depth(global.particle_system_background_10000001,10000001);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Crystal Detonate Remember 1

global.CDW[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Glean Off

glean = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Glean

if on = 1
{
if obj_Oenn_Body.can_stamcharge = 1
and obj_Oenn_Body.state != states.death

{
    instance_create(view_xview[0]+52,view_yview[0]+72,obj_StamPulseCrystalCkean);
}
alarm[0] = room_speed*5;
}
/*
glean = 1;

alarm[0] = room_speed*5;

alarm[1] = 60;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause Screen / Resize Surface

// Set GUI LAYER SIZE

display_set_gui_size(view_wview,view_hview)

// Resizes View ...

view_wview[0] = round(display_get_width())/3;
view_hview[0] = round(display_get_height())/3;
view_wport[0] = view_wview[0];
view_hport[0] = view_hview[0];
surface_resize(application_surface, view_wview[0], view_hview[0]);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Turn off in Certain Rooms

if room = room_Prologue
or room = room_IntroStage_00
or room = room_IntroStage_3
or off = 1
{
    on = 0;
}
else
{
     on = 1;
}

if global.cut_scene = 1 // If Camera Point exists global.cutScene is 1 (on)
{
    off = 1
}
else
{
    off = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy if Main Title Menu

if room = room_Initialize
{
    instance_destroy();
}
/*
if instance_exists(obj_HUD)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HUD Sprites
/*
if !instance_exists(obj_pause)
{
if global.Oenn_hp &gt; 0
{

// HUD Skills

//draw_sprite_ext(spr_HUD_Skills,0,130,110,2,2,0,c_white,1);

//HP Crystal

draw_sprite_ext(spr_HUD_HP_Crystal,0,101,155,.75,.75,0,c_white,1);
/*
if glean = 1
{
draw_sprite_ext(spr_HUD_HP_Crystal_Glean,-1,130,220,2,2,0,c_white,1);
}


// Shard Meter

draw_sprite_ext(spr_HUD_Shard_Meter,0,150,30,1,1,0,c_white,1);

// Shards

draw_set_font(EIGHTBIT);

draw_set_color(c_yellow);

if instance_exists(obj_HUD_Get_Shard)  //Shard Animation
{

draw_sprite_ext(spr_HUD_Get_Shard,obj_HUD_Get_Shard.image_index,180,40,.5,.5,0,c_white,1);
}

draw_text(180,25,string(global.Oenn_shards))



// Crystal Hold

if global.CrystalHold = 1 and obj_Oenn_Body.cch = 1
{
   draw_sprite_ext(spr_CrystalHold_Icon,0,108,78,1,1,0,c_white,1);
}

if global.CrystalHold = 1 and obj_Oenn_Body.cch = 0
{
   draw_sprite_ext(spr_CrystalHold_Icon_Off,0,108,78,1,1,0,c_white,1);
}


// Crystal Wall

if global.CrystalWall = 1 and obj_Oenn_Body.ccw = 1
{
   draw_sprite_ext(spr_CrystalWall_Icon,0,108,78,1,1,0,c_white,1);
}

if global.CrystalWall = 1 and obj_Oenn_Body.ccw = 0
{
   draw_sprite_ext(spr_CrystalWall_Icon_Off,0,108,78,1,1,0,c_white,1);
}


// Crystal Armor

if global.CrystalArmor = 1 and obj_Oenn_Body.cca = 1
{
   draw_sprite_ext(spr_CrystalArmor_Icon,0,100,80,1,1,0,c_white,1);
}

if global.CrystalArmor = 1 and obj_Oenn_Body.cca = 0
{
   draw_sprite_ext(spr_CrystalArmor_Icon_Off,0,100,80,1,1,0,c_white,1);
}


// Crystal Orb

if global.CrystalOrb = 1 and obj_Oenn_Body.cco = 1
{
   draw_sprite_ext(spr_CrystalOrb_Icon,0,100,80,1,1,0,c_white,1);
}

if global.CrystalOrb = 1 and obj_Oenn_Body.cco = 0
{
   draw_sprite_ext(spr_CrystalOrb_Icon_Off,0,100,80,1,1,0,c_white,1);
}

// Lucid Time

if global.LucidTime = 1 and obj_Oenn_Body.clt = 1
{
   draw_sprite_ext(spr_LucidTime_Icon,0,94,78,1,1,0,c_white,1);
}

if global.LucidTime = 1 and obj_Oenn_Body.clt = 0
{
   draw_sprite_ext(spr_LucidTime_Icon_Off,0,94,78,1,1,0,c_white,1);
}


// Lucid Teleport

if global.LucidTeleport = 1 and obj_Oenn_Body.clt = 1
{
   draw_sprite_ext(spr_LucidTeleport_Icon,0,94,78,1,1,0,c_white,1);
}

if global.LucidTeleport = 1 and obj_Oenn_Body.clt = 0
{
   draw_sprite_ext(spr_LucidTeleport_Icon_Off,0,94,78,1,1,0,c_white,1);
}

}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HP BAR &amp; STAM BAR
/*
if !instance_exists(obj_pause)
{
if global.Oenn_hp &gt; 0
{

// HP

for (var i = 0; i &lt; global.Oenn_hp/1.5; i++)
{
    draw_sprite_ext(spr_HUD_HPPellet,0,85,198+(24*i),1,1,0,c_white,1);
}

// STAM

for (var i = 0; i &lt; global.Oenn_stamina/15; i++)
{
    draw_sprite_ext(spr_HUD_StaminaPellet,0,119,198+(24*i),1,1,0,c_white,1);
}
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAWing and DEBUGGING
/*
if !instance_exists(obj_pause)
{
if global.Oenn_hp &gt; 0
{

// Shards

draw_set_font(EIGHTBIT);

draw_set_color(c_yellow);

if instance_exists(obj_HUD_Get_Shard)  //Shard Animation
{

draw_sprite_ext(spr_HUD_Get_Shard,obj_HUD_Get_Shard.image_index,120,20,.5,.5,0,c_white,1);
}

draw_text(120,20,string(global.Oenn_shards))


}
}


// Room Location

draw_text(view_xview+700,view_yview+50,string(global.roomlocation))


// HP

draw_text(view_xview+700,view_yview+50,string(global.HP))

// Stam

draw_text(view_xview+800,view_yview+50,string(global.STAM))

// Max Stam

draw_text(view_xview+900,view_yview+50,string(global.MAXSTAM))


// HT Status

draw_text(view_xview+1000,view_yview+50,string(global.statusupgrades[0]))



// Enemy Direction

draw_text(view_xview+1000,view_yview+50,string(obj_Geogem.hspeed))



// Wall Explode

draw_text(view_xview+1000,view_yview+50,string(global.CDW[1]))


// VSP

draw_text(view_xview+1000,view_yview+50,string(obj_Oenn_Body.vsp))


// HSP

draw_text(view_xview+1000,view_yview+50,string(obj_Oenn_Body.hsp))

// Oenn Push

draw_text(view_xview+700,view_yview+50,string(obj_Oenn_Body.push))



// Oenn Charging

draw_text(view_xview+1000,view_yview+50,string(obj_Oenn_Body.charging))

// Oenn Charged

draw_text(view_xview+700,view_yview+50,string(obj_Oenn_Body.charged))

// Charging Status

draw_text(view_xview+900,view_yview+50,(obj_Oenn_Body.chargingstatus))
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Skill Icons 
if on = 1
{
    if !instance_exists(obj_pause)
    {
    if global.Oenn_hp &gt; 0
    {
    // HUD Skills
    
    //draw_sprite_ext(spr_HUD_Skills,0,view_xview[0]+55,view_yview[0]+40,1,1,0,c_white,1);
    
    //HP Crystal
    if obj_Oenn_Body.can_stamcharge = 1
    {
        draw_sprite_ext(spr_HUD_HP_Crystal,0,view_xview[0]+52,view_yview[0]+72,.5,.5,0,c_white,1);
    }
    if obj_Oenn_Body.can_stamcharge = 0
    {
        draw_sprite_ext(spr_HUD_HP_Crystal_OFF,0,view_xview[0]+52,view_yview[0]+72,.5,.5,0,c_white,1);
    }
    /*
    if glean = 1
    {
    draw_sprite_ext(spr_HUD_HP_Crystal_Glean,-1,view_xview[0]+52,view_yview[0]+72,.5,.5,0,c_white,1);
    }
    */
    // Shard Meter
    
    draw_sprite_ext(spr_HUD_Shard_Meter,0,view_xview[0]+80,view_yview[0]+20,1,1,0,c_white,1);
    
    // Shards
    
    draw_set_font(Shard_Meter);
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_set_color(c_yellow);
    
    
    // Shard Meter Background
    
    draw_sprite_ext(spr_HUD_ShardCount,0,view_xview[0]+109,view_yview[0]+20,1,1,0,c_white,1);
    
    
    draw_text_ext_transformed(view_xview[0]+99,view_yview[0]+18,string(global.Oenn_shards),8,1000000,.75,.75,0)
    
    
    
    // Crystal Hold
    
    if global.CrystalHold = 1 and obj_Oenn_Body.cch = 1
    {
       draw_sprite_ext(spr_CrystalHold_Icon,0,view_xview[0]+54,view_yview[0]+40,1,1,0,c_white,1);
    }
    
    if global.CrystalHold = 1 and obj_Oenn_Body.cch = 0
    {
       draw_sprite_ext(spr_CrystalHold_Icon_Off,0,view_xview[0]+54,view_yview[0]+40,1,1,0,c_white,1);
    }
    
    
    // Crystal Wall
    
    if global.CrystalWall = 1 and obj_Oenn_Body.ccw = 1
    {
       draw_sprite_ext(spr_CrystalWall_Icon,0,view_xview[0]+54,view_yview[0]+40,1,1,0,c_white,1);
    }
    
    if global.CrystalWall = 1 and obj_Oenn_Body.ccw = 0
    {
       draw_sprite_ext(spr_CrystalWall_Icon_Off,0,view_xview[0]+54,view_yview[0]+40,1,1,0,c_white,1);
    }
    
    // Blank
    
    if global.CrystalWall = 0 and global.CrystalHold =0
    {
       draw_sprite_ext(spr_Skill_Blank_Left,0,view_xview[0]+54,view_yview[0]+40,1,1,0,c_white,.75);
    }
    
    ////////////////////////////////////////////////////
    
    
    // Lucid Time
    
    if global.LucidTime = 1 and obj_Oenn_Body.clt = 1
    {
       draw_sprite_ext(spr_LucidTime_Icon,0,view_xview[0]+51,view_yview[0]+40,1,1,0,c_white,1);
    }
    
    if global.LucidTime = 1 and obj_Oenn_Body.clt = 0
    {
       draw_sprite_ext(spr_LucidTime_Icon_Off,0,view_xview[0]+51,view_yview[0]+40,1,1,0,c_white,1);
    }
    
    
    // Lucid Teleport
    
    if global.LucidTeleport = 1 and obj_Oenn_Body.clt = 1
    {
       draw_sprite_ext(spr_LucidTeleport_Icon,0,view_xview[0]+51,view_yview[0]+40,1,1,0,c_white,1);
    }
    
    if global.LucidTeleport = 1 and obj_Oenn_Body.clt = 0
    {
       draw_sprite_ext(spr_LucidTeleport_Icon_Off,0,view_xview[0]+51,view_yview[0]+40,1,1,0,c_white,1);
    }
    
    // Blank
    
    if global.LucidTime = 0 and global.LucidTeleport = 0
    {
       draw_sprite_ext(spr_Skill_Blank_Right,0,view_xview[0]+51,view_yview[0]+40,1,1,0,c_white,.75);
    }
    
    ////////////////////////////////////////////////////
    
    
    // Crystal Armor
    
    if global.CrystalArmor = 1 and obj_Oenn_Body.cca = 1
    {
       draw_sprite_ext(spr_CrystalArmor_Icon,0,view_xview[0]+52,view_yview[0]+42,1,1,0,c_white,1);
    }
    
    if global.CrystalArmor = 1 and obj_Oenn_Body.cca = 0
    {
       draw_sprite_ext(spr_CrystalArmor_Icon_Off,0,view_xview[0]+52,view_yview[0]+42,1,1,0,c_white,1);
    }
    
    
    // Crystal Orb
    
    if global.CrystalOrb = 1 and obj_Oenn_Body.cco = 1
    {
       draw_sprite_ext(spr_CrystalOrb_Icon,0,view_xview[0]+52,view_yview[0]+42,1,1,0,c_white,1);
    }
    
    if global.CrystalOrb = 1 and obj_Oenn_Body.cco = 0
    {
       draw_sprite_ext(spr_CrystalOrb_Icon_Off,0,view_xview[0]+52,view_yview[0]+42,1,1,0,c_white,1);
    }
    
    // Blank
    
    if global.CrystalOrb = 0 and global.CrystalArmor = 0
    {
       draw_sprite_ext(spr_Skill_Blank_Top,0,view_xview[0]+52,view_yview[0]+42,1,1,0,c_white,.75);
    }
    
    //// SHARD IS LOW TO DRAW ABOVE REST
    
    if instance_exists(obj_HUD_Get_Shard)  //Shard Animation
    {
    
    draw_sprite_ext(spr_HUD_Get_Shard,obj_HUD_Get_Shard.image_index,view_xview[0]+80,view_yview[0]+20,.5,.5,0,c_white,1);
    }
    
    }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HP BAR &amp; STAM BAR
if on = 1
{
    if !instance_exists(obj_pause)
    {
    if global.Oenn_hp &gt; 0
    {
    
    // HP
    
    for (var i = 0; i &lt; global.Oenn_hp/1.5; i++)
    {
        draw_sprite_ext(spr_HUD_HPPellet,0,view_xview[0]+44,view_yview[0]+88+(12*i),1,1,0,c_white,1);
    }
    
    // STAM
    
    for (var i = 0; i &lt; global.Oenn_stamina/15; i++)
    {
        draw_sprite_ext(spr_HUD_StaminaPellet,0,view_xview[0]+60,view_yview[0]+87+(12*i),1,1,0,c_white,1);
    }
    }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
