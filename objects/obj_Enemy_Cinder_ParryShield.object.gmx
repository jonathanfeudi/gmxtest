<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Enemy_Cinder_StoneShield</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); //Flashing,...
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shield

Shield = instance_create(x,y,obj_ShieldGrunt_Shield_Parry);

Shield.host = id;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables

animation = 1/8;

image_speed = animation;

// Stats

dirMAX = 4;  // Used to remember dir after Crystal Hold
dir = 4;
grav = .4;
hsp = 2;
vsp = 0;
jumpspeed = 6;

up_counter = 0;

can_run = 1;
can_throw = 1;
vision = 96;

cb_stunned = 1;

enemy_hp = 7;

enemy_dmg = 4;

// Initial State

enemy_state = enemy_states.enemy_idle;

enemy_shield = 1;

// Won't Go off Platform Edges

edgestop = 1;

// Able to make Shield

make_shield = 0;

// Face Oenn initially

if x &lt; obj_Oenn_Body.x
{
    image_xscale = -1;
}
else
{
    image_xscale = 1;
}

facing_oenn = 1;

//Can Turn

can_turn = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Melee

if dir = -4
{
    with instance_create(x-26,y-32,obj_BTA_Melee)
    {
        direction = 180;
        speed = 3;
    }
    if place_meeting(x-32,y+16,par_Grounded)
    {
        hsp = -3;
    }
}
if dir = 4
{
    with instance_create(x+26,y-32,obj_BTA_Melee)
    {
        direction = 0;
        speed = 3;
    }
    if place_meeting(x+32,y+16,par_Grounded)
    {
        hsp = 3;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn around

if x &lt; obj_Oenn_Body.x
{
    image_xscale = -1;
}

if x &gt; obj_Oenn_Body.x
{
    image_xscale = 1;
}

can_turn = 1;
// Debug

draw_text(x,y-100,"alarm, baby!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shield Flip

if instance_exists(Shield)
{
    if image_xscale &gt; 0 
    {
        Shield.x = x - 16;
        Shield.y = y - 16;
    }
    else
    {
        Shield.x = x + 16;
        Shield.y = y - 16;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switching States

switch (enemy_state)
{
    
    //// Idle
    case enemy_states.enemy_idle: 
    sprite_index = spr_Enemy_Cinder_StoneShield;
    animation = 1/4;
    can_melee = 1;
    
    /// Shield
    if make_shield = 1
    {
        Shield = instance_create(x,y,obj_Enemy_ShieldGrunt_Shield_Stone);
        Shield.host = id;
        make_shield = 0;
    }
    
    hsp = 0;
    
    break;
    
    //// Hit 1
    case enemy_states.enemy_hit1: 
    sprite_index = spr_Enemy_Cinder_StoneShield_Hit1;
    animation = 1/8;
    hsp = 0;
    
    break;
    
    //// Hit 2
    case enemy_states.enemy_hit2: 
    sprite_index = spr_Enemy_Cinder_StoneShield_Hit2;
    animation = 1/8;
    hsp = 0;
    
    break;
    
    //// Hit 3
    case enemy_states.enemy_hit3: 
    sprite_index = spr_BTA_Grunt_Slash;
    animation = 1/2;
    
    if can_melee = 1
    {
        alarm[1] = .35 * room_speed;
        can_melee = 0;
    }
    
    hsp = 0;
    
    break;
    
    // Stunned
    case enemy_states.enemy_stunned: 
    sprite_index = spr_Enemy_Cinder_StoneShield_Vulnerable;
    animation = 1/8;
    enemy_shield = 0;
    hsp = 0;
    
    break;
    
    // Recover
    case enemy_states.enemy_recover: 
    sprite_index = spr_Enemy_Cinder_StoneShield_Recover;
    animation = 1/8;
    make_shield = 1;
    enemy_shield = 1;
    hsp = 0;
    
    break;
    
    // Death
    case enemy_states.enemy_death:
    animation = 1/4;
    sprite_index = spr_Enemy_Cinder_StoneShield_Death;
    
    break;
}    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Image Flip

if enemy_state != enemy_states.enemy_down
and enemy_state != enemy_states.enemy_up
and enemy_state != enemy_states.enemy_stunned
and enemy_state != enemy_states.enemy_death
and facing_oenn = 0
and can_turn = 1
{
    alarm[0] = room_speed;
    can_turn = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Death

if enemy_hp &lt;= 0 and enemy_state != enemy_states.enemy_death
{
    image_index = 0;
    enemy_state = enemy_states.enemy_death;
    with Shield
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collisions and Gravity

//Gravity

if (vsp &lt; 5) vsp += grav;


//Horizontal Collision

if (place_meeting((x+hsp),(y),par_wall))
{
    while(!place_meeting((x+sign(hsp)),(y),par_wall))
    {
        x += sign(hsp);
    }
    hsp = 0;
}

//Horizontal Collision with Crystal Wall

if (place_meeting((x+hsp),(y),obj_Crystal_Wall))
{
    while round(!place_meeting((x+sign(hsp)),(y),obj_Crystal_Wall))
    {
        x += sign(hsp);
    }
    hsp = 0;
}

x += floor(hsp);


//Vertical Collision Floor

if (place_meeting((x),round(y+vsp),par_wall))
{
    while(!place_meeting((x),(y+sign(vsp)),par_wall))
    {
        y += sign(vsp);
    }
    vsp = 0;
    if (edgestop = 1) and hsp &gt; 0 
    and ((!position_meeting(x+((sprite_width/8)*sign(-dir)), y+(sprite_height/4)+32,par_wall))
    and (!position_meeting(x+((sprite_width/8)*sign(-dir)), y+(sprite_height/4)+16,par_wall)))
    //and COV.on = 0  // COV will still work on edge
    {
        enemy_state = enemy_states.enemy_idle;
        can_run = 0;
        alarm[2] = room_speed*.5;
    }
     if (edgestop = 1) and hsp &lt; 0 
     and ((!position_meeting(x+((sprite_width/8)*sign(dir)), y+(sprite_height/4)+32,par_wall)) 
     and (!position_meeting(x+((sprite_width/8)*sign(dir)), y+(sprite_height/4)+16,par_wall))) 
     //and COV.on = 0
    {
        enemy_state = enemy_states.enemy_idle;
        can_run = 0;
        alarm[2] = room_speed*.5;
    }
}


//Vertical Collision Platforms
/*
if (place_meeting((x),round(y+vsp),obj_Ghost_Platform))
{
    while(!place_meeting((x),(y+sign(vsp)),obj_Ghost_Platform))
    {
        y += sign(vsp);
    }
    vsp = 0;
    if (edgestop = 1) and hsp &gt; 0 and !position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+16,obj_Ghost_Platform)
    {
        enemy_state = enemy_states.enemy_idle;
        can_run = 0;
        alarm[2] = room_speed*2;
    }
     if (edgestop = 1) and hsp &lt; 0 and !position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+16,obj_Ghost_Platform)
    {
        enemy_state = enemy_states.enemy_idle;
        can_run = 0;
        alarm[2] = room_speed*2;
    }
}
*/
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Am I facing Oenn?

if x &lt; obj_Oenn_Body.x
and image_xscale = -1
or x &gt; obj_Oenn_Body.x
and image_xscale = 1
{
    facing_oenn = 1;
}
else
{
    facing_oenn = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Transition to States

// Back to Idles
if sprite_index = spr_Enemy_Cinder_StoneShield_Hit1
or sprite_index = spr_Enemy_Cinder_StoneShield_Hit2
or sprite_index = spr_Enemy_Cinder_StoneShield_Vulnerable
{
    enemy_state = enemy_states.enemy_idle;
}

//Melee to Idle
if sprite_index = spr_BTA_Grunt_Slash
{
    enemy_state = enemy_states.enemy_idle;
}

//Stunned to Recover Poise
if sprite_index = spr_Enemy_Cinder_StoneShield_Vulnerable
{
    enemy_state = enemy_states.enemy_recover;
}

// Stunned to Idle
if sprite_index = spr_Enemy_Cinder_StoneShield_Recover
{
    enemy_state = enemy_states.enemy_idle;
}

// Death
if sprite_index = spr_Enemy_Cinder_StoneShield_Death
{
    instance_create(x,y,obj_Enemy_DeathSmoke);
    audio_play_sound(snd_Enemy_Death,10,0);
    instance_create(x,y-24,obj_Shard_Small);
    if random(100) &lt; 75 then  // Chances for Health
    {
        instance_create(x,y-24,obj_Health_Small);
    }
    
    // Death Burn Carcass
    if image_xscale = 1
    {
        with instance_create(x,y,obj_Enemy_CinderStoneShield_DeathBurn)
        {
            image_xscale = 1;
        }
    }
    if image_xscale = -1
    {
        with instance_create(x,y,obj_Enemy_CinderStoneShield_DeathBurn)
        {
            image_xscale = -1;
        }
    }       
    
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>36,48</point>
    <point>36,36</point>
  </PhysicsShapePoints>
</object>
