<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Enemy_EarthEater_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy</parentName>
  <maskName>spr_Enemy_EarthEater_Idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit .. Flashing

event_inherited(); //Flashing,...
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables

animation = 1/4;

image_speed = animation;

// Stats

dirMAX = -2;  // Used to remember dir after Crystal Hold
dir = -2;
grav = .4;
hsp = 0;
vsp = 0;

enemy_shield = 1;

flip = -1;

charged = 0;

can_melee = 1;

stun = 10;

enemy_hp = 30;

enemy_dmg = 8;

// Initial State

enemy_state = enemy_states.enemy_idle;

// Won't Go off Platform Edges

edgestop = 1;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Scaling Sprites

image_yscale = 2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Weak Spot

followOBJ = instance_create(x-12,y+24,obj_EE_WeakSpot);

followOBJ2 = instance_create(x-24,y,obj_EE_Headstun);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Can Melee

can_melee = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Charged!

charged = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Back to Idle from Walking
if enemy_hp &gt; 0
and enemy_state != enemy_states.enemy_turning
and enemy_state != enemy_states.enemy_shooting
and enemy_state != enemy_states.enemy_stunned
and enemy_state != enemy_states.enemy_melee
{
if instance_exists(obj_Oenn_Body)
{
    alarm[0] = room_speed*.25;
}

enemy_state = enemy_states.enemy_idle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Idle to Charging or Walking

if enemy_hp &gt; 0
and enemy_state != enemy_states.enemy_turning
and enemy_state != enemy_states.enemy_shooting
and enemy_state != enemy_states.enemy_stunned
and enemy_state != enemy_states.enemy_melee
{
if irandom_range(1,200) &gt; 125 
{
    if charged = 0
    {
        alarm[1] = room_speed*3;
        alarm[2] = room_speed*3;
        enemy_state = enemy_states.enemy_charging;
    }
    if charged = 1
    {
        image_index = 0;
        enemy_state = enemy_states.enemy_shooting;
    }
}
else
{
    alarm[1] = room_speed*3;
    enemy_state = enemy_states.enemy_walking;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Follow Object Follow Master

if instance_exists(followOBJ)
{
    if image_xscale = 2
    {
        followOBJ.x = x-16;
        followOBJ.y = y+24;
    }
    if image_xscale = -2
    {
        followOBJ.x = x+16; //16
        followOBJ.y = y+24;
    }
}

if instance_exists(followOBJ2)
{
    if image_xscale = 2
    {
        followOBJ2.x = x-24;
        followOBJ2.y = y;
    }
    if image_xscale = -2
    {
        followOBJ2.x = x+24; //16
        followOBJ2.y = y;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); //Flashing,...
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switching States

switch (enemy_state)
{
    //Idle
    case enemy_states.enemy_idle:
    sprite_index = spr_Enemy_EarthEater_Idle;
    hsp = 0;
    
    
    break;
    
    //Turning
    case enemy_states.enemy_turning:
    sprite_index = spr_Enemy_EarthEater_Turning;
    //flip *= -1;
    hsp = 0;
    
    break;
   
    // Movement
    case enemy_states.enemy_walking: 
    sprite_index = spr_Enemy_EarthEater_Walking
    if (image_index = 1 or image_index = 6)
    {
        audio_play_sound(snd_StoneDoor_Opening,10,0);
        global.shake = 12;
    }
    hsp = dir/global.slowmo;
    
    break;
    
    // Charging 
    case enemy_states.enemy_charging:
    sprite_index = spr_Enemy_EarthEater_Eating;
    if !audio_is_playing(snd_EE_Eating)
    {
        audio_play_sound(snd_EE_Eating,10,0);
    }
    break;
    
    // Shooting 
    case enemy_states.enemy_shooting:
    sprite_index = spr_Enemy_EarthEater_Shooting;
    hsp = 0;
    vsp = 0;
    if image_index = 1
    {
        audio_play_sound(snd_EE_chargingshot,10,0);
    }
    if !instance_exists(obj_EE_Projectile)
    and image_index = 17
    {
        if image_xscale = 2
        {
            with instance_create(x-32,y+16,obj_EE_Projectile)
            {
                speed = (5/global.enemy_slowmo); //Bullet Speed
                direction = 180;  //Bullet Direction
            }
        }
        if image_xscale = -2
        {
            with instance_create(x+32,y+16,obj_EE_Projectile)
            {
                speed = (5/global.enemy_slowmo); //Bullet Speed
                direction = 0;  //Bullet Direction
            }
        }
        charged = 0;
    }
    
    break;
    
    // Melee 
    case enemy_states.enemy_melee:
    sprite_index = spr_Enemy_EarthEater_Melee;
    hsp = 0;
    if !instance_exists(obj_EE_Melee)
    and image_index = 6
    {
        if image_xscale = 2
        {
            instance_create(x-64,y+16,obj_EE_Melee)
        }
        if image_xscale = -2
        {
            instance_create(x+64,y+16,obj_EE_Melee)
        }
    }
    break;
    
    
    // Stunned 
    case enemy_states.enemy_stunned:
    sprite_index = spr_Enemy_EarthEater_Stunned;
    hsp = 0;
    
    break;
    
    
    // Death 
    case enemy_states.enemy_death:
    sprite_index = spr_Enemy_EarthEater_Death;
    break;
    
}    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Flip Sprite and Turning
if (enemy_state = enemy_states.enemy_idle
or enemy_state = enemy_states.enemy_walking)
{
    if flip = 1 
    {
        image_xscale = -2;
    }
    if flip = -1 
    {
        image_xscale = 2;
    }
    
    if flip = 1 and x &gt; obj_Oenn_Body.x
    {
        image_index = 0;
        enemy_state = enemy_states.enemy_turning;
    }
    if flip = -1 and x &lt; obj_Oenn_Body.x
    {
        image_index = 0;
        enemy_state = enemy_states.enemy_turning;
    }
}
/*
if enemy_state != enemy_states.enemy_turning
{
    if hsp &gt; 0
    {
        flip = 1;
    }
    if hsp &lt; 0 
    {
        flip = -1;
    }
    
    if flip = 1 
    {
        image_xscale = -2;
        dir *= 1;
    }
    else 
    {
        image_xscale = 2;
        dir *= -1;
    }
    
    if flip = 1 and x &gt; obj_Oenn_Body.x
    {
        image_index = 0;
        enemy_state = enemy_states.enemy_turning;
    }
    if flip = -1 and x &lt; obj_Oenn_Body.x
    {
        image_index = 0;
        enemy_state = enemy_states.enemy_turning;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collisions and Gravity

//Gravity

if (vsp &lt; 5) vsp += grav;


//Horizontal Collision

if (place_meeting((x+hsp),(y),par_wall))
{
    while(!place_meeting((x+sign(hsp)),(y),par_wall))
    {
        x += sign(hsp);
    }
    hsp = 0;
}

//Horizontal Collision with Crystal Wall

if (place_meeting((x+hsp),(y),obj_Crystal_Wall))
{
    while round(!place_meeting((x+sign(hsp)),(y),obj_Crystal_Wall))
    {
        x += sign(hsp);
    }
    hsp = 0;
}

x += (hsp);


//Vertical Collision Floor

if (place_meeting((x),ceil(y+vsp),par_wall))
{
    while(!place_meeting((x),ceil(y+sign(vsp)),par_wall))
    {
        y += ceil(sign(vsp));
    }
    vsp = 0;
    if (edgestop = 1) and hsp &gt; 0 and !position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+16,par_wall)
    {
        dir *= -1;
    }
     if (edgestop = 1) and hsp &lt; 0 and !position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+16,par_wall)
    {
        dir *= -1;
    }
}

//Vertical Collision Platforms

if (place_meeting((x),ceil(y+vsp),obj_Ghost_Platform))
{
    /*while(!place_meeting((x),(y+sign(vsp)),obj_Ghost_Platform))
    {
        y += sign(vsp);
    }*/
    vsp = 0;
    if (edgestop = 1) and hsp &gt; 0 and !position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+16,obj_Ghost_Platform)
    {
        dir *= -1;
    }
     if (edgestop = 1) and hsp &lt; 0 and !position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+16,obj_Ghost_Platform)
    {
        dir *= -1;
    }
}

y += ceil(vsp);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Death

if enemy_hp &lt;= 0 
and enemy_state != enemy_states.enemy_death
{
    image_index = 0;
    audio_play_sound(snd_Charged_Lo,10,0);
    part_particles_create(global.particle_system, x, y, global.pt_Oenn_Charged, 15);
    enemy_state = enemy_states.enemy_death;
    with followOBJ
    {
        instance_destroy();
    }
    with followOBJ2
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn at Wall
/*
if (place_meeting(x+1,y,par_wall) or place_meeting(x-1,y,par_wall))
or (place_meeting(x+1,y,obj_Crystal_Wall) or place_meeting(x-1,y,obj_Crystal_Wall))
{
   dir *= -1;
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Too Close Melee

if distance_to_object(obj_Oenn_Body) &lt; 64
and (enemy_state = enemy_states.enemy_walking
or enemy_state = enemy_states.enemy_idle)
and can_melee = 1
{
    if (flip = 1 and x &lt; obj_Oenn_Body.x)
    or (flip = -1 and x &gt; obj_Oenn_Body.x)
    {
        image_index = 0;
        can_melee = 0;
        enemy_state = enemy_states.enemy_melee;
        alarm[3] = room_speed*4;
    }
}

if distance_to_object(obj_Crystal_Wall) &lt; 48
and (enemy_state = enemy_states.enemy_walking
or enemy_state = enemy_states.enemy_idle)
and can_melee = 1
{
    if (flip = 1 and x &lt; obj_Crystal_Wall.x)
    or (flip = -1 and x &gt; obj_Crystal_Wall.x)
    {
        image_index = 0;
        can_melee = 0;
        enemy_state = enemy_states.enemy_melee;
        alarm[3] = room_speed*4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Vulnerable

if enemy_state = enemy_states.enemy_shooting
or enemy_state = enemy_states.enemy_stunned
{
    mask_index = spr_EE_VulnerableMask;
}
else
{
    mask_index = spr_Enemy_EarthEater_Idle;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stunned

if stun &lt;= 0 and enemy_hp &gt; 0
{
    enemy_state = enemy_states.enemy_stunned;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get out of Floor
if enemy_state != enemy_states.enemy_death
{
    y = y-lengthdir_y(-1,90);
}

/*
var_dir = point_direction(x,y,other.x,other.y)
x = x+lengthdir_x(-1,var_dir)
y = y+lengthdir_y(-1,var_dir)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animation End Transitions to Next State

// Turning

if sprite_index = spr_Enemy_EarthEater_Turning 
{
    flip *= -1;
    dir *= -1;
    enemy_state = enemy_states.enemy_idle;
    if instance_exists(obj_Oenn_Body)
    {
        alarm[0] = room_speed*.25;  // to charging or walking
    }
}

// Melee

if sprite_index = spr_Enemy_EarthEater_Melee
{
    enemy_state = enemy_states.enemy_idle;
    if instance_exists(obj_Oenn_Body)
    {
        alarm[0] = room_speed*.5;  // to charging or walking
    }
}

// Shooting

if sprite_index = spr_Enemy_EarthEater_Shooting
{
    enemy_state = enemy_states.enemy_idle;
    if instance_exists(obj_Oenn_Body)
    {
        alarm[0] = room_speed*1;  // to charging or walking
    }
}

// Stunned

if sprite_index = spr_Enemy_EarthEater_Stunned
{
    enemy_state = enemy_states.enemy_idle;
    stun = 10;
    if instance_exists(obj_Oenn_Body)
    {
        alarm[0] = room_speed*6;  // to charging or walking
    }
}
    
// Death

if sprite_index = spr_Enemy_EarthEater_Death
{
        global.shake = 10;
        instance_create(x,y,obj_Enemy_DeathSmoke);
        audio_play_sound(snd_Enemy_Death,10,0);
        instance_create(x,y,obj_Shard_Large);
        if random(100) &lt; 80 then  // Chances for Health
           {
            instance_create(x,y,obj_Health_Small);
           }
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Self

draw_self();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit .. Flashing

event_inherited(); //Flashing,...
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Bounding Box
/*
draw_set_colour(c_red);
draw_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_top,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
