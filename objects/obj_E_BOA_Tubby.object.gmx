<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_BOA_Tubby_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy</parentName>
  <maskName>spr_BOA_Tubby_Idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); //Flashing,...
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables

animation = 1/8;

image_speed = animation;

// Stats

dirMAX = 4;  // Used to remember dir after Crystal Hold
dir = 4;
grav = .4;
hsp = 2;
vsp = 0;
jumpspeed = 6;

walk_counter = 0;
walk = 0;

up_counter = 0;

can_run = 1;
can_melee = 1;
vision = 96;

dmg2 = 0;
cb_alerted = 1;

cb_pulsestunned = 1;
cb_stunned = 1;

enemy_hp = 9;

enemy_dmg = 3;

pulsestun = 8;

pulsedeathpush = 1;

// Initial State

enemy_state = enemy_states.enemy_idle;

enemy_shield = 0;

// Won't Go off Platform Edges

edgestop = 1;

// Origin is Off Center for 3rd Slash Animation

origin_offcenter = 0;

x_origin = 0;
y_origin = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Range to strike

strike = 24; // 16
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// COV

COV = instance_create(x,y-8,obj_COV);

COV.host = id;

COV.target = obj_Oenn_Body;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); //Flashing,...
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); //Flashing,...
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Can Be Pulse Stunned

cb_pulsestunned = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Can Be Alerted

cb_alerted = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Back to Idle

if enemy_state = enemy_states.enemy_walking
{
    enemy_state = enemy_states.enemy_idle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Can Be Stunned

cb_stunned = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Can Run

can_run = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Melee

var hostid;
hostid = id;

if image_xscale = -1
{
    with instance_create(x+28,y,obj_E_BOA_Tubby_Melee)
    {
        host = hostid;
        image_xscale = -1;
    }
}
if image_xscale = 1
{
    with instance_create(x-28,y,obj_E_BOA_Tubby_Melee)
    {
        host = hostid;
        image_xscale = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Agro Vision and Can Be Alerted again

vision = 96;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Follow Object Follow Master

if instance_exists(COV)
{
    COV.x = x;
    COV.y = y-8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switching States

switch (enemy_state)
{
    
    /// Alerted
    case enemy_states.enemy_alerted:
    sprite_index = spr_BOA_Tubby_Alert;
    hsp = 0;
    can_melee = 1;
    animation = 1/4;
    // Direction
    if x &gt; obj_Oenn_Body.x
    {
        dir = -4;
    }
    else
    {
        dir = 4;
    }
    
    scr_Enemie_CinderGrav();
       
    break;
    
    //// Idle
    case enemy_states.enemy_idle: 
    sprite_index = spr_BOA_Tubby_Idle;
    hsp = 0;
    //can_melee = 1;
    animation = 1/4;
    
    // Strike
    if place_meeting(x,y+1,par_wall) and distance_to_object(obj_Oenn_Body) &lt; strike//16
    and ((y - obj_Oenn_Body.y) &lt; 16)
    and can_melee = 1
    {
        image_index = 0;
        enemy_state = enemy_states.enemy_melee;
    }
    
    
    // Alerted
    if  cb_alerted = 1 and can_melee = 1
    {
        if ((position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+8,par_wall) and (x &lt; obj_Oenn_Body.x))
        or ((position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+8,par_wall)) and (x &gt; obj_Oenn_Body.x)))
        or (place_meeting(x,y+2,obj_slope) and (x &lt; obj_Oenn_Body.x))
        or (place_meeting(x,y+2,obj_slope) and (x &gt; obj_Oenn_Body.x))
        {
            if can_run = 1 and ((x &gt; obj_Oenn_Body.x + 4) or (x &lt; obj_Oenn_Body.x - 4)) 
            {
                if ((collision_line(x,y-16,x-vision,y,obj_Oenn_Body,false,true)
                and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y,par_wall,false,true))
                or (collision_line(x,y-16,x+vision,y,obj_Oenn_Body,false,true)
                and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y,par_wall,false,true)))
                or 
                COV.on = 1 and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y-16,par_Wall_Floor,false,true)
                {
                    image_index = 0;
                    enemy_state = enemy_states.enemy_alerted;
                    audio_play_sound(snd_Cinder_Alert,10,0);
                    //cb_alerted = 0;
                    dirMAX = 4;  // Used to remember dir after Crystal Hold
                    dir = 4;
                }
            }
        }
    }
    
    // Start Running
    if  cb_alerted = 0 and can_melee = 1
    {
        if ((position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+8,par_wall) and (x &lt; obj_Oenn_Body.x))
        or ((position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+8,par_wall)) and (x &gt; obj_Oenn_Body.x)))
        {
            if can_run = 1 and ((x &gt; obj_Oenn_Body.x + 4) or (x &lt; obj_Oenn_Body.x - 4)) 
            {
                if ((collision_line(x,y-16,x-vision,y,obj_Oenn_Body,false,true)
                and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y,par_wall,false,true))
                or (collision_line(x,y-16,x+vision,y,obj_Oenn_Body,false,true)
                and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y,par_wall,false,true)))
                or 
                COV.on = 1 and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y-16,par_wall,false,true)
                {
                    
                    if bbox_bottom = obj_Oenn_Body.bbox_bottom
                    {
                        image_index = 0;
                        enemy_state = enemy_states.enemy_running;
                        dirMAX = 4;  // Used to remember dir after Crystal Hold
                        dir = 4;
                    }
                    
                }
            }
        }
    }
    
    scr_Enemie_TubbyrGrav();
    
    break;
    
    //// Walk
    case enemy_states.enemy_walking: 
    sprite_index = spr_BOA_Tubby_Run;
    //dirMAX = 2;  // Used to remember dir after Crystal Hold
    //dir = 2;
    hsp = dir/global.slowmo;
    can_melee = 1;
    walk_counter = 0;
    animation = 1/4;
    //cb_alerted = 1;
    
    if (place_meeting((x+hsp),(y),par_Wall_Floor))
    or (place_meeting((x+hsp),(y),obj_Crystal_Wall))
    { 
        dir *= -1;
    }
    
    // Alerted
    if  cb_alerted = 1 and can_melee = 1
    {
        if ((position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+8,par_wall) and (x &lt; obj_Oenn_Body.x))
        or ((position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+8,par_wall)) and (x &gt; obj_Oenn_Body.x)))
        or (place_meeting(x,y+2,obj_slope) and (x &lt; obj_Oenn_Body.x))
        or (place_meeting(x,y+2,obj_slope) and (x &gt; obj_Oenn_Body.x))
        {
            if can_run = 1 and ((x &gt; obj_Oenn_Body.x + 4) or (x &lt; obj_Oenn_Body.x - 4)) 
            {
                if ((collision_line(x,y-16,x-vision,y,obj_Oenn_Body,false,true)
                and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y,par_wall,false,true))
                or (collision_line(x,y-16,x+vision,y,obj_Oenn_Body,false,true)
                and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y,par_wall,false,true)))
                or 
                COV.on = 1 and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y-16,par_Wall_Floor,false,true)
                {
                    image_index = 0;
                    enemy_state = enemy_states.enemy_alerted;
                    audio_play_sound(snd_Cinder_Alert,10,0);
                   //cb_alerted = 0;
                    dirMAX = 4;  // Used to remember dir after Crystal Hold
                    dir = 4;
                }
            }
        }
    }
    
    // Start Running
    if  cb_alerted = 0 and can_melee = 1
        {
        if ((position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+8,par_Wall_Floor) and (x &lt; obj_Oenn_Body.x))
        or ((position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+8,par_Wall_Floor)) and (x &gt; obj_Oenn_Body.x)))
        {
            if can_run = 1 and ((x &gt; obj_Oenn_Body.x + 4) or (x &lt; obj_Oenn_Body.x - 4)) 
            {
                if ((collision_line(x,y-16,x-vision,y,obj_Oenn_Body,false,true)
                and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y,par_wall,false,true))
                or (collision_line(x,y-16,x+vision,y,obj_Oenn_Body,false,true)
                and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y,par_wall,false,true)))
                or 
                COV.on = 1 and !collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y-16,par_wall,false,true)
                {
                    image_index = 0;
                    enemy_state = enemy_states.enemy_running;
                    dirMAX = 4;  // Used to remember dir after Crystal Hold
                    dir = 4;
                }
            }
        }
    }
    
    scr_Enemie_TubbyrGrav();
        
    break;
    
    //// Running
    case enemy_states.enemy_running: 
    sprite_index = spr_BOA_Tubby_Run;
    hsp = dir/global.slowmo;
    up_counter = 0;
    walk_counter = 0;
    vision = 128;
    animation = 1/4;
    
    // Direction
    if x &gt; obj_Oenn_Body.x
    {
        dir = -2.5; //2.5
    }
    else
    {
        dir = 2.5;
    }
    
    // Stop if Can't See
    
    if collision_line(x,y-16,obj_Oenn_Body.x,obj_Oenn_Body.y-16,par_Wall_Floor,false,true)
    {
        image_index = 0;
        enemy_state = enemy_states.enemy_idle;
        alarm[0] = room_speed*4;
    }
    
    // Strike or Fall
    if place_meeting(x,y+1,par_wall) and distance_to_object(obj_Oenn_Body) &lt; strike
    and can_melee = 1
    {
        switch(choose(1,1,1,2))
        {
            case 1:
            image_index = 0;
            enemy_state = enemy_states.enemy_melee;
            
            break;
            
            case 2:
            //sprite_index = spr_BOA_Tubby_Trip;
            image_index = 0;
            enemy_state = enemy_states.enemy_down;
            
            break;
        }
    }
    
    // Revert to Idles
    
    if (x &lt; obj_Oenn_Body.x + 4) and (x &gt; obj_Oenn_Body.x - 4) 
    {
        image_index = 0;
        enemy_state = enemy_states.enemy_idle;
        alarm[0] = room_speed*4;
    }
    
    
    scr_Enemie_TubbyrGrav();

    break;
    
    
    
    // Melee
    case enemy_states.enemy_melee: 
    sprite_index = spr_BOA_Tubby_Melee;
    //hsp = 0;
    vision = 128;
    animation = 1/2;
    
    if can_melee = 1
    {
        alarm[1] = .4 * room_speed; 
        can_melee = 0;
    }
    
    // Push Forward with Punch
    if image_index &gt;= 7 and image_index &lt;= 10 
    {
        if image_xscale &gt; 0
        {
            hsp = -6;
        }
        if image_xscale &lt; 0
        {
            hsp = 6;
        }
    }
    else
    {
        hsp = 0;
    }
    
    scr_Enemie_TubbyrGrav();
    
    break;
    
    
     // Trip and Fall
    case enemy_states.enemy_down: 
    sprite_index = spr_BOA_Tubby_Trip;
    vision = 128;
    animation = 1/4;
    
    if hsp &gt; 0 
    {
        hsp -= .08
    }
    
    if hsp &lt; 0 
    {
        hsp += .16
    }
    
    //alarm[4] = -4;
    
    if image_index &lt;= 7
    {
        hsp = 0;
    }
    
    if image_index = 8
    {
        if image_xscale &gt; 0
        {
            hsp = -4;
        }
        if image_xscale &lt; 0
        {
            hsp = 4;
        }
    }
    
    if image_index &gt;= 18
    {
        hsp = 0;
    }
    
    scr_Enemie_TubbyrGrav();
    
    break;
    
    //// Damaged/ Stunned
    case enemy_states.enemy_damaged:
    
    alarm[1] = -4; /// Melee Attack goes away
    
    if hsp &gt; 0 
    {
        hsp -= 1;
    }
    if hsp &lt; 0 
    {
        hsp += 1;
    }
    
    animation = 1/4;
    
    if dmg2 = 0
    {
        sprite_index = spr_BOA_Tubby_DMG;
    }
    if dmg2 = 1
    {
        sprite_index = spr_BOA_Tubby_DMG;
    }
    
    scr_Enemie_TubbyrGrav();
    
    break;
    
    //// Death
    case enemy_states.enemy_death:
    animation = 1/8;
    cb_slashed = 0; 
    if sprite_index != spr_BOA_Tubby_Death
    {
    image_index = 0
    sprite_index = spr_BOA_Tubby_Death;
    }
    //hsp = 0; 
    // Damaged
    
    if image_index = 0
    {
        if image_xscale &gt; 0
        {
            hsp = 3;
        }
        if image_xscale &lt; 0
        {
            hsp = -3;
        }
    }
    
    if hsp &gt; 0
    {
        hsp -= .5;
    }
    if hsp &lt; 0
    {
        hsp += .5;
    }
    
    alarm[1] = -1; // No Phantom Hits
    if image_index = 0
    {
        audio_play_sound(choose(snd_DeathGrunt_1,snd_DeathGrunt_2,snd_DeathGrunt_3),10,0);
    }
    
    scr_Enemie_TubbyrGrav();
    
    break;
}    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collisions and Gravity
/*
//Gravity

if (vsp &lt; 5) vsp += grav;


//Horizontal Collision

if (place_meeting((x+hsp),(y),par_wall))
{
    while(!place_meeting((x+sign(hsp)),(y),par_wall))
    {
        x += sign(hsp);
    }
    hsp = 0;
}

//Horizontal Collision with Crystal Wall

if (place_meeting((x+hsp),(y),obj_Crystal_Wall))
{
    while round(!place_meeting((x+sign(hsp)),(y),obj_Crystal_Wall))
    {
        x += sign(hsp);
    }
    hsp = 0;
}

x += floor(hsp);


//Vertical Collision Floor

if (place_meeting((x),ceil(y+vsp),par_wall))
{
    while(!place_meeting((x),ceil(y+sign(vsp)),par_wall))
    {
        y += ceil(sign(vsp));
    }
    vsp = 0;
    if enemy_state = enemy_states.enemy_running
    {
        if (edgestop = 1) and hsp &gt; 0 
        and ((!position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+32,par_wall))
        and (!position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+16,par_wall)))
        {
            enemy_state = enemy_states.enemy_idle;
            can_run = 0;
            alarm[2] = room_speed*.5;
        }
         if (edgestop = 1) and hsp &lt; 0 
         and ((!position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+32,par_wall)) 
         and (!position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+16,par_wall))) 
         //and COV.on = 0
        {
            enemy_state = enemy_states.enemy_idle;
            can_run = 0;
            alarm[2] = room_speed*.5;
        }
    }
    if enemy_state = enemy_states.enemy_walking
    {
        if (edgestop = 1) and hsp &gt; 0 
        and ((!position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+32,par_wall))
        and (!position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+16,par_wall)))
        {
            dir *= -1;
        }
         if (edgestop = 1) and hsp &lt; 0 
         and ((!position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+32,par_wall)) 
         and (!position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+16,par_wall))) 
         //and COV.on = 0
        {
            dir *= -1;
        }
    }
}


//Vertical Collision Platforms
/*
if (place_meeting((x),round(y+vsp),obj_Ghost_Platform))
{
    while(!place_meeting((x),(y+sign(vsp)),obj_Ghost_Platform))
    {
        y += sign(vsp);
    }
    vsp = 0;
    if (edgestop = 1) and hsp &gt; 0 and !position_meeting(x+((sprite_width/4)*sign(-dir)), y+(sprite_height/4)+16,obj_Ghost_Platform)
    {
        enemy_state = enemy_states.enemy_idle;
        can_run = 0;
        alarm[2] = room_speed*2;
    }
     if (edgestop = 1) and hsp &lt; 0 and !position_meeting(x+((sprite_width/4)*sign(dir)), y+(sprite_height/4)+16,obj_Ghost_Platform)
    {
        enemy_state = enemy_states.enemy_idle;
        can_run = 0;
        alarm[2] = room_speed*2;
    }
}
*//*
y += ceil(vsp);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Death

if enemy_hp &lt;= 0
{
    enemy_state = enemy_states.enemy_death;
    with COV
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start Walking

if walk_counter = 6
{
    enemy_state = enemy_states.enemy_walking;
    walk_counter = 0;
    dirMAX = 2;  // Used to remember dir after Crystal Hold
    dir = 2;
    alarm[4] = room_speed*5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Image Speed

image_speed = animation/global.slowmo;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Image Flip

if dir &gt; 0//dir = 4 or dir = 2
{
    image_xscale = -1;
}
else
{
    image_xscale = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// COV Image Angle and Agro
if instance_exists(COV)
{
    COV.target_x = obj_Oenn_Body.x;
    
    COV.target_y = obj_Oenn_Body.y;
    
    if COV.on = 1 and !collision_line(x,y,obj_Oenn_Body.x,obj_Oenn_Body.y,par_wall,false,true)
    {
        vision = 128;
        alarm[0] = room_speed*4;
    }
    
    if vision = 128
    {
        COV.image_xscale = 3.5;
        COV.image_yscale = 2;
    }
    if vision = 96 /// Alarm 0 sets vision to 96 turning cb alerted on 
    {
        COV.image_xscale = 1;
        COV.image_yscale = 1;
        cb_alerted = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Flash Duration

if cb_stunned = 1
{
    flash_duration = room_speed * .075; // 0.25 seconds
}
if cb_stunned = 0
{
    flash_duration = room_speed * .075; // 0.25 seconds
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop Enemy From Pushing Off Ledge

if enemy_state = enemy_states.enemy_death 
or enemy_state = enemy_states.enemy_damaged
{
    if !place_meeting(x+32,y+16,par_Grounded)
    {
        hsp = 0;
    }
    if !place_meeting(x-32,y+16,par_Grounded)
    {
        hsp = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_floor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get out of Floor
if y &gt; other. y
{
    y += -1;
}
else
{
    y -= 1;
}

/*
var_dir = point_direction(x,y,other.x,other.y)
x = x+lengthdir_x(-1,var_dir)
y = y+lengthdir_y(-1,var_dir)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Pulse">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damaged State

if pulsestun &lt; 10
{
    pulsestun += 1;
}

if pulsestun = 10
and enemy_state != enemy_states.enemy_death
{
    image_index = 0;
    hsp = 0;
    enemy_state = enemy_states.enemy_damaged;
    pulsestun = 0;
    instance_create(x,y,obj_PulseStunCollision);
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Agro Vision

vision = 128;
alarm[0] = room_speed*4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Pulse_Charged">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Charge Pulse Knock Back

if obj_Oenn_Body.x &lt; x
and place_meeting(x+32,y+16,par_Grounded)
{
    hsp = 10; 
    image_index = 0;
    enemy_state = enemy_states.enemy_damaged;
}
if obj_Oenn_Body.x &gt; x 
and place_meeting(x-32,y+16,par_Grounded)
{
    hsp = -10; 
    image_index = 0;
    enemy_state = enemy_states.enemy_damaged;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Pulse_Small">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Agro Vision

vision = 128;
alarm[0] = room_speed*4;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Knock Back if Death Blow
/*
if enemy_state != enemy_states.enemy_death
//and pulsedeathpush = 1
{
    if obj_Oenn_Body.x &lt; x
    and place_meeting(x+32,y+16,par_Grounded)
    {
        hsp = 4; 
    }
    if obj_Oenn_Body.x &gt; x 
    and place_meeting(x-32,y+16,par_Grounded)
    {
        hsp = -4; 
    }
    //pulsedeathpush = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Slash_Small">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damaged State

if cb_stunned = 1
and enemy_state != enemy_states.enemy_death
{
    image_index = 0;
    if obj_Oenn_Body.x &lt; x
    and place_meeting(x+32,y+16,par_Grounded)
    {
        hsp = 4; 
    }
    if obj_Oenn_Body.x &gt; x 
    and place_meeting(x-32,y+16,par_Grounded)
    {
        hsp = -4; 
    }
    enemy_state = enemy_states.enemy_damaged;
    cb_stunned = 0;
    alarm[3] = 10;
    //instance_create(x_origin,y_origin,obj_PulseStunCollision);
}

if enemy_state != enemy_states.enemy_death
{
    image_index = 0;
    
    if obj_Oenn_Body.x &lt; x
    and place_meeting(x+32,y+16,par_Grounded)
    {
        hsp = 3; 
    }
    if obj_Oenn_Body.x &gt; x 
    and place_meeting(x-32,y+16,par_Grounded)
    {
        hsp = -3; 
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Slash_Combo_2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damaged State

if cb_stunned = 1
and enemy_state != enemy_states.enemy_death
{
    image_index = 0;
    
    if obj_Oenn_Body.x &lt; x
    and place_meeting(x+32,y+16,par_Grounded)
    {
        hsp = 10; 
    }
    if obj_Oenn_Body.x &gt; x 
    and place_meeting(x-32,y+16,par_Grounded)
    {
        hsp = -10; 
    }
    dmg2 = 0;
    enemy_state = enemy_states.enemy_damaged;
    cb_stunned = 0;
    alarm[3] = 10;
    //instance_create(x_origin,y_origin,obj_PulseStunCollision);
}

if enemy_state != enemy_states.enemy_death
{
    image_index = 0;
    
    if obj_Oenn_Body.x &lt; x
    and place_meeting(x+32,y+16,par_Grounded)
    {
        hsp = 10; 
    }
    if obj_Oenn_Body.x &gt; x 
    and place_meeting(x-32,y+16,par_Grounded)
    {
        hsp = -10; 
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Slash_Combo_1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damaged State

if cb_stunned = 1
and enemy_state != enemy_states.enemy_death
{
    image_index = 0;
    
    if obj_Oenn_Body.x &lt; x
    and place_meeting(x+32,y+16,par_Grounded)
    {
        hsp = 7; 
    }
    if obj_Oenn_Body.x &gt; x 
    and place_meeting(x-32,y+16,par_Grounded)
    {
        hsp = -7; 
    }
    dmg2 = 1;
    enemy_state = enemy_states.enemy_damaged;
    cb_stunned = 0;
    alarm[3] = 10;
    //instance_create(x_origin,y_origin,obj_PulseStunCollision);
}

if enemy_state != enemy_states.enemy_death
{
    image_index = 0;
    if obj_Oenn_Body.x &lt; x
    and place_meeting(x+32,y+16,par_Grounded)
    {
        hsp = 6; 
    }
    if obj_Oenn_Body.x &gt; x 
    and place_meeting(x-32,y+16,par_Grounded)
    {
        hsp = -6; 
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animation Ends

// Idle to Walking

if sprite_index = spr_BOA_Tubby_Idle
{
    can_melee = 1;
    walk_counter += 2;
}

// Alerted to Running

if sprite_index = spr_BOA_Tubby_Alert
{
    enemy_state = enemy_states.enemy_running;
    cb_alerted = 0;
}
    
    
// Melee

if sprite_index = spr_BOA_Tubby_Melee
{
    enemy_state = enemy_states.enemy_idle;
    alarm[0] = room_speed*4;
}

// Fall and stumble

if sprite_index = spr_BOA_Tubby_Trip
{
    enemy_state = enemy_states.enemy_idle;
}

/*
if sprite_index = spr_BOA_Tubby_Fall
{
    enemy_state = enemy_states.enemy_idle;
}*/


// Damaged

if sprite_index = spr_BOA_Tubby_DMG
{
    enemy_state = enemy_states.enemy_idle;
    alarm[0] = room_speed*4;
    alarm[5] = room_speed *1;
    cb_alerted = 0;
}


// Death

if sprite_index = spr_BOA_Tubby_Death
{ 
    instance_create(x,y-16,obj_Enemy_DeathSmoke);
    // Death Burn Carcass
    if image_xscale = 1
    {
        with instance_create(x,y,obj_E_BOA_Tubby_DeathBurn)
        {
            image_xscale = 1;
        }
    }
    if image_xscale = -1
    {
        with instance_create(x,y,obj_E_BOA_Tubby_DeathBurn)
        {
            image_xscale = -1;
        }
    }       
    audio_play_sound(snd_Enemy_Death,10,0);
    instance_create(x,y-16,obj_Shard_Small);
    if random(100) &lt; 75 then  // Chances for Health
    {
        instance_create(x,y-16,obj_Health_Small);
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Bounding Box
/*
draw_set_colour(c_red);
draw_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_top,false);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug

draw_text(x,y-32,cb_alerted);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
