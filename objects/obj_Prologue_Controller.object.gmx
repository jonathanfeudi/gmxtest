<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PressUp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Can Next 

alarm[0] = room_speed * 4;

next = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Image Speed

image_speed = 1/8;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Alpha

alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Background Sounds and Music

audio_play_sound(snd_WindBlowing,10,1);
audio_play_sound(snd_Prologue_BM,10,1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Centering

x = view_xview + view_wview / 2;

//y = (view_yview + view_hview / 2) 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// First Next Chime

first = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Next On

next = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Camera  Shake and Center

//if global.cut_scene = 0
{
    view_xview = (x-view_wview/2);
    view_yview = (x-view_hview/2);
    
    view_xview[0] = (view_xview[0]);
    view_yview[0] = (view_yview[0]);
    
    // Camera Shake
    
    if(global.shake &gt; 0)
    {
        global.shake -= 1;
    }
     
    if(global.shake &lt; 0)
    {
        global.shake = 0;
    }
     
    view_xview = x-view_wview/2 + random(global.shake - (global.shake/2));
    view_yview = y-view_hview/2 + random(global.shake - (global.shake/2));
    view_angle = (random(global.shake - (global.shake/2)))/4;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inputs


//Inputs Gamepad

h_move = gamepad_axis_value(global.cp, gp_axislh);  // Defining variable h_move as horizontal input from left stick
v_move = gamepad_axis_value(global.cp, gp_axislv);  // This one is vertical movement from left stick


Key_Left    =   -(gamepad_button_check(global.cp,gp_padl) or keyboard_check(vk_left) or h_move &lt; -0.4);
Key_Right   =   gamepad_button_check(global.cp,gp_padr) or keyboard_check(vk_right) or h_move &gt; 0.4;
Key_Up   =   gamepad_button_check(global.cp,gp_padu) or keyboard_check(vk_up) or v_move &lt; -0.4;
Key_Down   =   gamepad_button_check(global.cp,gp_padd) or keyboard_check(vk_down) or v_move &gt; 0.4;
Key_Jump    =   gamepad_button_check(global.cp,gp_face1) or keyboard_check(ord('V')) or keyboard_check(vk_space);
Key_Shot    =   gamepad_button_check(global.cp,gp_face3) or keyboard_check(ord('A'));
Key_Slash    =   gamepad_button_check(global.cp,gp_face4) or keyboard_check(ord('S'));
Key_B    =   gamepad_button_check(global.cp,gp_face2) or keyboard_check(ord('G'));
Key_LBump   =   gamepad_button_check(global.cp,gp_shoulderl) or keyboard_check(ord('W'));
Key_RBump   =   gamepad_button_check(global.cp,gp_shoulderr) or keyboard_check(ord('E'));
Key_LTrig   =   gamepad_button_check(global.cp,gp_shoulderlb) or keyboard_check(ord('Q'));
Key_RTrig   =   gamepad_button_check(global.cp,gp_shoulderrb) or keyboard_check(ord('R'));

Stick_UpRight = (v_move &lt; -0.2) and (h_move &gt; 0.4);
Stick_UpLeft = (v_move &lt; -0.2) and (h_move &lt; -0.4);
Stick_DownRight = (v_move &gt; 0.2) and (h_move &gt; 0.4);
Stick_DownLeft = (v_move &gt; 0.2) and (h_move &lt; -0.4);

Key_RStick    =     gamepad_axis_value(global.cp,gp_axisrv)

Key_BPressed    =   gamepad_button_check_pressed(global.cp,gp_face2) or keyboard_check_pressed(ord('G'));
Key_SlashPressed    =   gamepad_button_check_pressed(global.cp,gp_face4) or keyboard_check_pressed(ord('S'));
Key_LeftPressed    =   gamepad_button_check_pressed(global.cp,gp_padl) or keyboard_check_pressed(vk_left);
Key_RightPressed   =   gamepad_button_check_pressed(global.cp,gp_padr) or keyboard_check_pressed(vk_right);
Key_UpPressed   =   gamepad_button_check_pressed(global.cp,gp_padu) or keyboard_check_pressed(vk_up);
Key_DownPressed   =   gamepad_button_check_pressed(global.cp,gp_padd) or keyboard_check_pressed(vk_down);
Key_JumpPressed    =   gamepad_button_check_pressed(global.cp,gp_face1) or keyboard_check_pressed(ord('V')) or keyboard_check_pressed(vk_space);
Key_ShotPressed    =   gamepad_button_check_pressed(global.cp,gp_face3) or keyboard_check_pressed(ord('A'));
Key_LBumpPressed   =   gamepad_button_check_pressed(global.cp,gp_shoulderl) or keyboard_check_pressed(ord('W'));
Key_RBumpPressed   =   gamepad_button_check_pressed(global.cp,gp_shoulderr) or keyboard_check_pressed(ord('E'));

Key_UpRelease   =   gamepad_button_check_released(global.cp,gp_padu) or keyboard_check_released(vk_up);
Key_ShotRelease    =   gamepad_button_check_released(global.cp,gp_face3) or keyboard_check_released(ord('A'));
Key_SlashRelease    =   gamepad_button_check_released(global.cp,gp_face4) or keyboard_check_released(ord('S'));
Key_JumpRelease    =  gamepad_button_check_released(global.cp,gp_face1) or keyboard_check_released(ord('V')) or keyboard_check_released(vk_space);
Key_BRelease    =   gamepad_button_check_released(global.cp,gp_face2) or keyboard_check_released(ord('G'));
Key_RTrigRelease   =   gamepad_button_check_released(global.cp,gp_shoulderrb) or keyboard_check_released(ord('R'));
Key_LBumpRelease   =   gamepad_button_check_released(global.cp,gp_shoulderl) or keyboard_check_released(ord('W'));


Key_RStick    =     gamepad_axis_value(global.cp,gp_axisrv);

Key_RStickButton    =     gamepad_button_check_pressed(global.cp,gp_stickr);

Key_Start    =     gamepad_button_check_pressed(global.cp,gp_start) or keyboard_check_pressed(vk_enter);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Next 
/*
if next = 1 and first = 0
and Key_UpPressed //and obj_Prologue_TextBox.textbox != 4
{
    first = 1;
    audio_play_sound(snd_Prologue_Next_Chime,10,0);
}*/

if !instance_exists(obj_Prologue_Skip)  // If skip menu is not on
{

// Make Sound

if next = 1 
and Key_UpPressed and obj_Prologue_TextBox.textbox != 4
{
    if first = 1
    {
        audio_play_sound(snd_Prologue_Next,10,0);
        audio_play_sound(snd_Prologue_Next,10,0);
    }
    
    if first = 0
    {
        first += 1;
        audio_play_sound(snd_Prologue_Next_Chime,10,0);
    }
}

// 1

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 0
{
    next = 0;
    timeline_index = tl_Prologue_1;
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}


// 2

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 1
{
    next = 0;
    timeline_index = tl_Prologue_2;
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 3

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 2
{
    next = 0;
    timeline_index = tl_Prologue_3;
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 3.2 ...... 3.1 is in a timeline

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 3.1
{
    next = 0;
    timeline_index = tl_Prologue_3_2;
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 4

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 3.4
{
    next = 0;
    timeline_index = tl_Prologue_4;
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 4.1

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 4
{
    next = 0;
    timeline_index = tl_Prologue_4_1;
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 5

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 4.1 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_5; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 5.1

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 5 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_5_1; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 5.2

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 5.1 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_5_2; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 5.3

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 5.2 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_5_3; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 6

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 5.3 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_6; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 6.1

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 6 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_6_1; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 6.15

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 6.1 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_6_15; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 6.2

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 6.13 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_6_2; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 7

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 6.2 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_7; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 8

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 7 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_8; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 8.2

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 8.1 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_8_2; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 9

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 8.2 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_9; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 10

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 9 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_10; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 10.1

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 10 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_10_1; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 11

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 10.1 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_11; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 12

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 11 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_12; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 13

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 12 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_13; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 14

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 13 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_14; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 15

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 14 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_15; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 16

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 15 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_16; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 17

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 16.1 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_17; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 18

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 17.1 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_18; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 19

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 18 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_19; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}

// 20

if next = 1
and Key_UpPressed
and obj_Prologue_TextBox.textbox = 19.2 // Last text box
{
    next = 0;
    timeline_index = tl_Prologue_20; // Current Time line
    timeline_position = 0;
    timeline_running = true;
    timeline_loop = false;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Alpha for Text next

if next = 0
{
    alpha = 0;
}

if next = 1
and alpha &lt; .66
{
    alpha += .020;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Skip Prologue

if Key_Start and !instance_exists(obj_Prologue_Skip)
{
    
    instance_create(x,y,obj_Prologue_Skip);
}

/*
    with all
    {
        instance_destroy();
    }
    audio_stop_all();
    
    //////////////////////////////////////////////// Clear Particles and Emitters

    // Particle System Front
    part_system_clear(global.particle_system_front);
    
    part_emitter_destroy_all(global.particle_system_front);
    
    part_system_depth(global.particle_system,-100000000);
    
    
    // Particle System Mid
    part_system_clear(global.particle_system);
    
    part_emitter_destroy_all(global.particle_system);
    
    part_system_depth(global.particle_system,-900);
    
    
    // Particle System Below
    part_system_clear(global.particle_system_back);
    
    part_emitter_destroy_all(global.particle_system_back);
    
    part_system_depth(global.particle_system_back,900);
    
    // Particle System Background
    part_system_clear(global.particle_system_background);
    
    part_emitter_destroy_all(global.particle_system_background);
    
    part_system_depth(global.particle_system_background,1000200);
    
    // Particle System Background 10000001
    part_system_clear(global.particle_system_background_10000001);
    
    part_emitter_destroy_all(global.particle_system_background_10000001);
    
    part_system_depth(global.particle_system_background_10000001,10000001);
    
    
    
    // Room Switch
    room_goto(room_Matte_Black);
    */


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// TEST CAMERA
/*
view_xview = (x-view_wview/2);
    view_yview = (x-view_hview/2);
    
    view_xview[0] = (view_xview[0]);
    view_yview[0] = (view_yview[0]);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop Timeline

if instance_exists(obj_Prologue_Skip) // If skip menu is not on
{
    timeline_running = false;
}
else
{
    timeline_running = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Text Next Icon

if next = 1 and !instance_exists(obj_Prologue_Skip)
{
    draw_sprite_ext(spr_Prologue_PressUp,-1,683,569,.5,.5,0,c_white,alpha); //.65 alpha
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// TOGGLE FULL SCREEN : TO BE MOVED TO CONTROLLER OBJECT

window_set_fullscreen(!window_get_fullscreen()); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear Particles

   //////////////////////////////////////////////// Clear Particles and Emitters

    // Particle System Front
    part_system_clear(global.particle_system_front);
    
    part_emitter_destroy_all(global.particle_system_front);
    
    part_system_depth(global.particle_system,-100000000);
    
    
    // Particle System Mid
    part_system_clear(global.particle_system);
    
    part_emitter_destroy_all(global.particle_system);
    
    part_system_depth(global.particle_system,-900);
    
    
    // Particle System Below
    part_system_clear(global.particle_system_back);
    
    part_emitter_destroy_all(global.particle_system_back);
    
    part_system_depth(global.particle_system_back,900);
    
    // Particle System Background
    part_system_clear(global.particle_system_background);
    
    part_emitter_destroy_all(global.particle_system_background);
    
    part_system_depth(global.particle_system_background,1000200);
    
    // Particle System Background 10000001
    part_system_clear(global.particle_system_background_10000001);
    
    part_emitter_destroy_all(global.particle_system_background_10000001);
    
    part_system_depth(global.particle_system_background_10000001,10000001);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop Music

audio_stop_all();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,48</point>
    <point>48,48</point>
  </PhysicsShapePoints>
</object>
