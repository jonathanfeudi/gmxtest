<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_TurretDoor_BlockWeakspot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables

animation = 1/4;

image_speed = animation;

image_xscale = .5;
image_yscale = .5;

// Stats

alarm[0] = random_range(200, 400);

alarm[2] = room_speed*.75;

brain = 1;

center = 1;  

counter = 0;
stunned = 0;

wall = 1;

dirMAX = 0;  // Used to remember dir after Crystal Hold
dir = -.25;
grav = .4;
hsp = 0;
vsp = 0;
jumpspeed = 6;

can_shoot = 1;

enemy_hp = 1;//6

enemy_dmg = 5;

deathmark = 1;

knockback = 12;

origin_offcenter = 0;

// Weakspot

weakspot = 1;

// Host

host = 0;

// Initial State

enemy_state = enemy_states.enemy_idle;

// Can be Crystal Hold

can_hold = 1;

crystal_held = 0;

ch_count = 0;











</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Are you a Shield

enemy_shield = 0;

enemy_soft = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Can be Slashed

cb_slashed = 0;

cb_slashed_combo_1 = 0;

cb_slashed_combo_2 = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Flash White

flash = shader_get_uniform(sh_flash, "f_colour");
flash_timer = 0;
flash_duration = room_speed * 0.25; // 0.25 seconds
flash_r = 1;  // Colour of your flash. Values on 0-1 range.
flash_g = 1;  // All colours set on 1 would make it white
flash_b = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Revearse Direction

dir *= -1;

alarm[2] = room_speed*.75;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// WeakSpot Chooser

if weakspot = 1
{
    weakspot = 0;
}

if weakspot = 0
{
    weakspot = 1;
}



alarm[0] = random_range(200, 400);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// WeakSpot Chooser

if weakspot = 0
{
    weakspot = 1;
}

if weakspot = 1
{
    weakspot = 0;
}

alarm[1] = random_range(200, 400);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switching States

switch (enemy_state)
{
    
    //// Idle
    case enemy_states.enemy_idle: 
    image_index = 0;
    image_speed = 0;
    
    if !collision_line(x,y,obj_Oenn_Body.x,obj_Oenn_Body.y,par_wall,false,true)
    and distance_to_object(obj_Oenn_Body) &lt; 384
    {
        enemy_state = enemy_states.enemy_shooting;
    }
    
    break;
    
    //// Shooting
    case enemy_states.enemy_shooting: 
    image_speed = animation;
    if collision_line(x,y,obj_Oenn_Body.x,obj_Oenn_Body.y,par_wall,false,true)
    or distance_to_object(obj_Oenn_Body) &gt; 390
    {
        enemy_state = enemy_states.enemy_idle;
    }
    
    
    break;
    
    //// Stunned
    case enemy_states.enemy_stunned: 
    image_speed = animation;
    sprite_index = spr_TurretDoor_Stunned;
    hsp = 0;
    
    
    break;
    
    //// Death
    case enemy_states.enemy_death:

    instance_create(x,y,obj_Enemy_DeathSmoke);
    audio_play_sound(snd_Enemy_Death,10,0);
    instance_create(x,y,obj_Shard_Small);
    if random(100) &lt; 80 then  // Chances for Health
    {
        instance_create(x,y,obj_Health_Small);
    }
    with Wall
    {
        instance_destroy();
    }
    if brain = 1
    {
        with THECounter
        {
            instance_destroy();
        }
    }
    instance_destroy();
    
    break;
}    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Image Flip

if x &lt; obj_Oenn_Body.x
{
    image_xscale = -.5;
}
else
{
    image_xscale = .5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Friends and Wall and Counter

if center = 1
{
    BlockAbove = instance_create(x-4,y-16,obj_Enemy_TurretWall);
    BlockAbove.weakspot = 0;
    BlockAbove.enemy_shield = 1;
    BlockAbove.host = id;
    BlockAbove.dir = .25;
    BlockAbove.center = 0;
    BlockAbove.brain = 0;
    
    BlockBelow = instance_create(x-4,y+16,obj_Enemy_TurretWall);
    BlockBelow.weakspot = 0;
    BlockBelow.enemy_shield = 1;
    BlockBelow.host = id;
    BlockBelow.dir = .25;
    BlockBelow.center = 0;
    BlockBelow.brain = 0;
    
    THECounter = instance_create(x,y,obj_WallTurretCounter);
    
    center = 0;
}

if wall = 1
{
    Wall = instance_create(x,y,obj_TurretWall_Wall);
    Wall.host = id;
    wall = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprite
if enemy_state != enemy_states.enemy_stunned
{
    if weakspot = 0
    {
        sprite_index = spr_TurretDoor_Block;
        enemy_shield = 1;
    }
    
    if weakspot = 1
    {
        sprite_index = spr_TurretDoor_BlockWeakspot;
        enemy_shield = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stunned

if enemy_hp &lt;= 0 and stunned = 0
{
    enemy_state = enemy_states.enemy_stunned;
    enemy_shield = 1;
    counter.stunnedblocks += 1;
    stunned = 1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement
if enemy_state != enemy_states.enemy_stunned
{
    hsp = dir/global.slowmo;
    
    x += (hsp);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Counter Death

counter = instance_nearest(x,y,obj_WallTurretCounter);

if instance_exists(counter)
{
    if counter.stunnedblocks = 3
    {
        enemy_state = enemy_states.enemy_death;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Can be Slashed

cb_slashed = 0;

cb_slashed_combo_1 = 0;

cb_slashed_combo_2 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Slash">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Slash Collision

if !place_meeting(x,y,obj_Slash_Collision)
{
    instance_create(x,y,obj_Slash_Collision);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_Pulse">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Slash_Combo_2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Slash Collision

if !place_meeting(x,y,obj_Slash_Collision)
{
    instance_create(x,y,obj_Slash_Collision);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Slash_Combo_1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Slash Collision

if !place_meeting(x,y,obj_Slash_Collision)
{
    instance_create(x,y,obj_Slash_Collision);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shooting

if image_xscale &lt; 0 
{
    if sprite_index = spr_TurretDoor_Block
    {
    with instance_create(x+16,y,obj_Oremole_Shot)
        {
            sprite_index = spr_Enemy_OremoleBlue_Shot;
            direction = 0;
            cb_slashed = 0;
            cb_slashed_combo_1 = 0;
            cb_slashed_combo_2 = 0;
        }
    }
    if sprite_index = spr_TurretDoor_BlockWeakspot
    {
    with instance_create(x+16,y,obj_Oremole_Shot)
        {
            sprite_index = spr_Enemy_Oremole_Shot;
            direction = 0;
            cb_slashed = 0;
            cb_slashed_combo_1 = 0;
            cb_slashed_combo_2 = 0;
        }
    }
}

if image_xscale &gt; 0 
{
    if sprite_index = spr_TurretDoor_Block
    {
    with instance_create(x,y,obj_Oremole_Shot)
        {
            image_xscale = -.5;
            sprite_index = spr_Enemy_OremoleBlue_Shot;
            direction = 180;
            cb_slashed = 0;
            cb_slashed_combo_1 = 0;
            cb_slashed_combo_2 = 0;
        }
    }
    if sprite_index = spr_TurretDoor_BlockWeakspot
    {
    with instance_create(x,y,obj_Oremole_Shot)
        {
            image_xscale = -.5;
            sprite_index = spr_Enemy_Oremole_Shot;
            direction = 180;
            cb_slashed = 0;
            cb_slashed_combo_1 = 0;
            cb_slashed_combo_2 = 0;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
