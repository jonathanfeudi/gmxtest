<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>par_Oenn</parentName>
  <maskName>spr_Oenn_Collision_Mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Event Inherit

event_inherited(); //Flashing,...
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialized Variables

event_inherited();  // Flashing,...

//Sprite Variables

animation = 1/4;

image_speed = animation;  

blend = 0;

enterimagespeed = 1;

//Begin Following Body

x = obj_Oenn_Body.x;

y = obj_Oenn_Body.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Can Dash Again
//*
obj_Oenn_Body.can_dashL = 1;
obj_Oenn_Body.can_dashR = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Oenn Back to Idle

obj_Oenn_Body.state = states.idle;
obj_Oenn_Body.lock = 0;

////// If Boss Room Freeze

if room = room_IntroStage_2
{
    obj_Oenn_Body.lock = 1;
}

////// Hol Orro Fight

if room = room_IntroStage_3
{
    /// Oenn Time Line

    obj_Oenn_Body.timeline_index = tl_Oenn_Intro_2;
    obj_Oenn_Body.timeline_position = 0;
    obj_Oenn_Body.timeline_running = true;
    obj_Oenn_Body.timeline_loop = false;
    obj_Oenn_Body.sprite_index = spr_Oenn_Idle;
    obj_Oenn_Body.state = states.cutscene;
    obj_Oenn_Body.lock = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Can Stam Charge

obj_Oenn_Body.can_stamcharge = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// OBJECT OEEN BODY Pitfall 

obj_Oenn_Body.pitfall = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Flip and Scale

image_xscale = obj_Oenn_Body.image_xscale;

image_yscale = obj_Oenn_Body.image_yscale;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Follow Body

x = obj_Oenn_Body.x;

y = obj_Oenn_Body.y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Leg Sprites

// ENTER

if obj_Oenn_Body.sprite_index = spr_Oenn_ENTER
{
    sprite_index = spr_Oenn_ENTER;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_ENTER2
{
    sprite_index = spr_Oenn_ENTER2;
}

// Sitting

if obj_Oenn_Body.sprite_index = spr_Oenn_Sitting
{
    sprite_index = spr_Oenn_Sitting;
}

// Standing Up

if obj_Oenn_Body.sprite_index = spr_Oenn_StandingUp
{
    sprite_index = spr_Oenn_StandingUp;
}

// Crouching 

if obj_Oenn_Body.sprite_index = spr_Oenn_Crouch
{
    sprite_index = spr_Oenn_Crouch;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_Crouch_Shot
{
    sprite_index = spr_Oenn_Crouch_Shot;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_Crouch_Slash
{
    sprite_index = spr_Oenn_Crouch_Slash;
}


// Touching

if obj_Oenn_Body.sprite_index = spr_Oenn_Touching
{
    sprite_index = spr_Oenn_Touching;
}

// Pushing

if obj_Oenn_Body.sprite_index = spr_Oenn_Pushing
{
    sprite_index = spr_Oenn_Pushing;
}

// Pulling

if obj_Oenn_Body.sprite_index = spr_Oenn_Pulling
{
    sprite_index = spr_Oenn_Pulling;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_Pull_Ready
{
    sprite_index = spr_Oenn_Pull_Ready;
}

// Charging 

if obj_Oenn_Body.sprite_index = spr_Oenn_Charging
{
    sprite_index = spr_Oenn_Charging;
}

// Stam Charge

if obj_Oenn_Body.sprite_index = spr_Oenn_StamCharged
{
    sprite_index = spr_Oenn_StamCharged;
}

// Charged

if obj_Oenn_Body.sprite_index = spr_Oenn_Charged
{
    sprite_index = spr_Oenn_Charged;
    //image_index = 0;
}

// STANDING IDLE

if obj_Oenn_Body.sprite_index = spr_Oenn_Idle
{
    sprite_index = spr_Oenn_Idle;
}

// Idle Too Long

if obj_Oenn_Body.sprite_index = spr_Oenn_Idle_AdjustJacket
{
    sprite_index = spr_Oenn_Idle_AdjustJacket;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_Idle_Handglow
{
    sprite_index = spr_Oenn_Idle_Handglow;
}

// Idle Shot
if obj_Oenn_Body.sprite_index = spr_Oenn_Idle_Shot
{
    sprite_index = spr_Oenn_Idle_Shot;
}

// Charged Shots Ground
if obj_Oenn_Body.sprite_index = spr_Oenn_ChargeShot
{
    sprite_index = spr_Oenn_ChargeShot;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_ChargeShot_Up
{
    sprite_index = spr_Oenn_ChargeShot_Up;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_ChargeShot_UpDiag
{
    sprite_index = spr_Oenn_ChargeShot_UpDiag;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_ChargeShot_DownDiag
{
    sprite_index = spr_Oenn_ChargeShot_DownDiag;
}

// Idle Slash
if obj_Oenn_Body.sprite_index = spr_Oenn_Idle_Slash
{
    sprite_index = spr_Oenn_Idle_Slash;
}

// Idle Slash

if obj_Oenn_Body.sprite_index = spr_Oenn_Idle_SlashUp
{
    sprite_index = spr_Oenn_Idle_SlashUp;
}

// Fighting Stance
if obj_Oenn_Body.sprite_index = spr_Oenn_FightingStance
{
    sprite_index = spr_Oenn_FightingStance;
} 

// Shot Up 
if  obj_Oenn_Body.sprite_index = spr_Oenn_Idle_ShotUp
{
    sprite_index = spr_Oenn_Idle_ShotUp;
}


// Diag Shot Up
if obj_Oenn_Body.sprite_index = spr_Oenn_Idle_ShotDiagUp
{
    sprite_index = spr_Oenn_Idle_ShotDiagUp;
}

// Diag Shot Down
if obj_Oenn_Body.sprite_index = spr_Oenn_Idle_ShotDiagDown
{
    sprite_index = spr_Oenn_Idle_ShotDiagDown;
}

// Blocking
if obj_Oenn_Body.sprite_index = spr_Oenn_Blocking
{
    sprite_index = spr_Oenn_Idle_Legs;
}
if obj_Oenn_Body.sprite_index = spr_Oenn_BlockingEnd
{
    sprite_index = spr_Oenn_BlockingEnd;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_BlockingBreak
{
    sprite_index = spr_Oenn_BlockingBreak;
}


// Stunned

if obj_Oenn_Body.sprite_index = spr_Oenn_Low_Health
{
    sprite_index = spr_Oenn_Low_Health;
}


// Low Health Shots

if obj_Oenn_Body.sprite_index = spr_Oenn_Low_Health_Shot
{
    sprite_index = spr_Oenn_Low_Health_Shot;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_Low_Health_Shot_Up
{
    sprite_index = spr_Oenn_Low_Health_Shot_Up;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_Low_Health_ShotUpDiag
{
    sprite_index = spr_Oenn_Low_Health_ShotUpDiag;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_Low_Health_ShotDownDiag
{
    sprite_index = spr_Oenn_Low_Health_ShotDownDiag;
}

// Slash Combo-ing

if obj_Oenn_Body.sprite_index = spr_Oenn_SlashCombo_1
{
    sprite_index = spr_Oenn_SlashCombo_1;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_SlashCombo_2
{
    sprite_index = spr_Oenn_SlashCombo_2;
}

// Walking

if obj_Oenn_Body.sprite_index = spr_Oenn_Walking
{
    sprite_index = spr_Oenn_Walking;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_Walking
or obj_Oenn_Body.sprite_index = spr_Oenn_Walking_Shot
or obj_Oenn_Body.sprite_index = spr_Oenn_Walking_Shot_DiagUp
or obj_Oenn_Body.sprite_index = spr_Oenn_Walking_Shot_DiagDown
or obj_Oenn_Body.sprite_index = spr_Oenn_Walking_Slash
{
    sprite_index = spr_Oenn_Walking_Legs;
}

// Running

if obj_Oenn_Body.sprite_index = spr_Oenn_Running
or obj_Oenn_Body.sprite_index = spr_Oenn_Running_Shot
or obj_Oenn_Body.sprite_index = spr_Oenn_Running_Shot_DiagUp
or obj_Oenn_Body.sprite_index = spr_Oenn_Running_Shot_DiagDown
or obj_Oenn_Body.sprite_index = spr_Oenn_Running_Slash
{
    sprite_index = spr_Oenn_Running_Legs;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_RunningStop
{
    sprite_index = spr_Oenn_RunningStop;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_Running_WHOLE
{
    sprite_index = spr_Oenn_Running_WHOLE;
}

// Dashing

if obj_Oenn_Body.sprite_index = spr_Oenn_Dashing
{
    sprite_index = spr_Oenn_Dashing;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_Dashing_Back
{
    sprite_index = spr_Oenn_Dashing_Back;
}

// Jumping

if obj_Oenn_Body.sprite_index = spr_Oenn_Falling
or obj_Oenn_Body.sprite_index = spr_Oenn_Jump
or obj_Oenn_Body.sprite_index = spr_Oenn_JumptoFall
or obj_Oenn_Body.sprite_index = spr_Oenn_Jumping_Shot
or obj_Oenn_Body.sprite_index = spr_Oenn_Jumping_ShotDiagUp
or obj_Oenn_Body.sprite_index = spr_Oenn_Jumping_ShotUp
or obj_Oenn_Body.sprite_index = spr_Oenn_Jumping_ShotDiagDown
or obj_Oenn_Body.sprite_index = spr_Oenn_Jumping_ShotDown
or obj_Oenn_Body.sprite_index = spr_Oenn_Jumping_Slash
or obj_Oenn_Body.sprite_index = spr_Oenn_Jumping_SlashUp
or obj_Oenn_Body.sprite_index = spr_Oenn_Jumping_SlashDown
{
    sprite_index = spr_Oenn_Jump_Legs;
}

// Pre Jumping

if obj_Oenn_Body.sprite_index = spr_Oenn_PreJump
{
    sprite_index = spr_Oenn_PreJump;
} 

// Landing

if obj_Oenn_Body.sprite_index = spr_Oenn_Landing
{
    sprite_index = spr_Oenn_Landing;
} 


// Jumping Charged Shots

if obj_Oenn_Body.sprite_index = spr_Oenn_ChargeShot_Jump
{
    sprite_index = spr_Oenn_ChargeShot_Jump;
} 

if obj_Oenn_Body.sprite_index = spr_Oenn_ChargeShot_Jump_Up
{
    sprite_index = spr_Oenn_ChargeShot_Jump_Up;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_ChargeShot_Jump_Down
{
    sprite_index = spr_Oenn_ChargeShot_Jump_Down;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_ChargeShot_Jump_UpDiag
{
    sprite_index = spr_Oenn_ChargeShot_Jump_UpDiag;
}

if obj_Oenn_Body.sprite_index = spr_Oenn_ChargeShot_Jump_DownDiag
{
    sprite_index = spr_Oenn_ChargeShot_Jump_DownDiag;
}

// Damaged

if obj_Oenn_Body.sprite_index = spr_Oenn_Damaged
{
    sprite_index = spr_Oenn_Damaged;
} 

// Death

if obj_Oenn_Body.sprite_index = spr_Oenn_Death
{
    sprite_index = spr_Oenn_Death;
} 
if obj_Oenn_Body.sprite_index = spr_Oenn_Death_Air
{
    sprite_index = spr_Oenn_Death_Air;
} 

// Saving

if obj_Oenn_Body.sprite_index = spr_Oenn_Saving
{
    sprite_index = spr_Oenn_Saving;
} 
if obj_Oenn_Body.sprite_index = spr_Oenn_Saving_Done
{
    sprite_index = spr_Oenn_Saving_Done;
} 


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Slow Motion and Image Speeds

if global.enemy_slowmo &gt; 1 
{
    image_speed = animation/2;
}

/*
if obj_Oenn_Body.state = states.enter 
and obj_Oenn_Body.image_index &gt;= 18
{
    image_speed = 1/4;
}   */ 

if (obj_Oenn_Body.state = states.running
or obj_Oenn_Body.state = states.shooting_running
or obj_Oenn_Body.state = states.slashing_running)
and global.enemy_slowmo &lt;= 1 
//and enterimagespeed = 0
{
    image_speed = .5;
}
else if  obj_Oenn_Body.state = states.enter 
and image_index &gt; 14
and image_index &lt;= 17
{
    image_speed = 1/2;
}
else
{
    image_speed = .25;
}  
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// States Follow Oenn Body

state =  obj_Oenn_Body.state;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make Run Dust/Trail and Sound

if obj_Oenn_Body.cpb = 1
{
    if (state = states.running
    or state = states.shooting_running
    or state = states.slashing_running)
    and (image_index = 3 or image_index = 10)
    and (place_meeting(x,y+1,par_wall) 
    or place_meeting(x,y+1,par_Platform))
    and image_xscale = 1
    {
        audio_play_sound(snd_Oenn_Running,10,0);
        audio_play_sound(snd_Oenn_Running,10,0);
        part_particles_create(global.particle_system,x,y, global.pt_rundust, 1);
    }
    
    if (state = states.running
    or state = states.shooting_running
    or state = states.slashing_running)
    and (image_index = 3 or image_index = 11)
    and (place_meeting(x,y+1,par_wall) 
    or place_meeting(x,y+1,par_Platform))
    and image_xscale = -1
    {
        audio_play_sound(snd_Oenn_Running,10,0);
        audio_play_sound(snd_Oenn_Running,10,0);
        part_particles_create(global.particle_system,x,y, global.pt_rundustleft, 1);
    }
    
    if (state = states.running
    or state = states.shooting_running
    or state = states.slashing_running)
    and (image_index = 1 or image_index = 4 or image_index = 7 or image_index = 10 or image_index = 13)
    and image_xscale = 1
    and (place_meeting(x,y+1,par_wall) 
    or place_meeting(x,y+1,par_Platform))
    { 
        with instance_create(x-1,y,obj_Oenn_Run_Trail)
        {
            sprite_index = obj_Oenn_Body.sprite_index;
        }
        with instance_create(x-1,y,obj_Oenn_Run_Trail)
        {
            sprite_index = obj_Oenn_Legs.sprite_index;
        }   
    }
    
    if (state = states.running
    or state = states.shooting_running
    or state = states.slashing_running)
    and (image_index = 1 or image_index = 4 or image_index = 7 or image_index = 10 or image_index = 13)
    and image_xscale = -1
    and (place_meeting(x,y+1,par_wall) 
    or place_meeting(x,y+1,par_Platform))
    {
         with instance_create(x+1,y,obj_Oenn_Run_Trail)
        {
            sprite_index = obj_Oenn_Body.sprite_index;
        }
        with instance_create(x+1,y,obj_Oenn_Run_Trail)
        {
            sprite_index = obj_Oenn_Legs.sprite_index;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make Jump Trail

// Input

Key_RTrig   =   gamepad_button_check(global.cp,gp_shoulderrb) or keyboard_check(ord('R'));

// Trail

if obj_Oenn_Body.cpb = 1
{
    if (state = states.jumping
    or state = states.shooting_jumping
    or state = states.slashing_jumping)
    and obj_Oenn_Body.can_run and global.Oenn_stamina &gt; 0
    and (image_index = 1 or image_index = 3 or image_index = 5
    or image_index = 7 or image_index = 9  or image_index = 11 or image_index = 13
    or image_index = 15 or image_index = 17  or image_index = 19 or image_index = 21
    or image_index = 23)
    and image_xscale = 1
    {
        with instance_create(x,y,obj_Oenn_Run_Trail)
        {
            sprite_index = obj_Oenn_Body.sprite_index;
        }
        with instance_create(x,y,obj_Oenn_Run_Trail)
        {
            sprite_index = obj_Oenn_Legs.sprite_index;
        }
    }
    
    if (state = states.jumping
    or state = states.shooting_jumping
    or state = states.slashing_jumping)
    and obj_Oenn_Body.can_run and global.Oenn_stamina &gt; 0
    and (image_index = 1 or image_index = 3 or image_index = 5
    or image_index = 7 or image_index = 9  or image_index = 11 or image_index = 13
    or image_index = 15 or image_index = 17  or image_index = 19 or image_index = 21
    or image_index = 23)
    and image_xscale = -1
    {
       with instance_create(x,y,obj_Oenn_Run_Trail)
        {
            sprite_index = obj_Oenn_Body.sprite_index;
        }
        with instance_create(x,y,obj_Oenn_Run_Trail)
        {
            sprite_index = obj_Oenn_Legs.sprite_index;
        }
    }
    
    if state = states.falling
    and obj_Oenn_Body.can_run and global.Oenn_stamina &gt; 0
    and (image_index = 1 or image_index = 3 or image_index = 5
    or image_index = 7 or image_index = 9  or image_index = 11 or image_index = 13
    or image_index = 15 or image_index = 17  or image_index = 19 or image_index = 21
    or image_index = 23)
    {
         with instance_create(x,y,obj_Oenn_Run_Trail)
        {
            sprite_index = obj_Oenn_Body.sprite_index;
        }
        with instance_create(x,y,obj_Oenn_Run_Trail)
        {
            sprite_index = obj_Oenn_Legs.sprite_index;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Image Alpha

image_alpha = obj_Oenn_Body.image_alpha;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Image Blend

if obj_Oenn_Body.cpb = 0
{  
    if obj_Oenn_Body.blend &lt; 1
    {
        blend += .025;
    }
    
    image_blend = merge_color(c_white,c_aqua,blend)
    //image_blend = c_aqua;
}


/*
if obj_Oenn_Body.image_blend = c_aqua
{
    image_blend = c_aqua;
}

if obj_Oenn_Body.image_blend = -1
{
    image_blend = -1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Saving

if sprite_index = spr_Oenn_Saving_Done and instance_exists(obj_Save_Bar)
and image_index &gt; 7
{
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Eye Noise

if image_index = 14 //and image_index &lt; 17
and sprite_index = spr_Oenn_ENTER2
{
    audio_play_sound(snd_Eyes_Open,10,0);
}

if image_index = 28 //and image_index &lt; 17
and sprite_index = spr_Oenn_ENTER2
{
    audio_play_sound(snd_Oenn_Leather,10,0);
    audio_play_sound(snd_Oenn_Whoosh_Low,10,0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop Running Sound


/*
if obj_Oenn_Body.state = states.jumping
{
    audio_stop_sound(snd_Oenn_Running);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Bounding Box
/*
draw_set_colour(c_red);
draw_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_top,false);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Self

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
